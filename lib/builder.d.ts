export interface BuilderMap {
    'mt_vector': (this: any, params: any) => void;
    'mt_resPQ': (this: any, params: any) => void;
    'mt_p_q_inner_data_dc': (this: any, params: any) => void;
    'mt_p_q_inner_data_temp_dc': (this: any, params: any) => void;
    'mt_server_DH_params_ok': (this: any, params: any) => void;
    'mt_server_DH_inner_data': (this: any, params: any) => void;
    'mt_client_DH_inner_data': (this: any, params: any) => void;
    'mt_dh_gen_ok': (this: any, params: any) => void;
    'mt_dh_gen_retry': (this: any, params: any) => void;
    'mt_dh_gen_fail': (this: any, params: any) => void;
    'mt_bind_auth_key_inner': (this: any, params: any) => void;
    'mt_rpc_result': (this: any, params: any) => void;
    'mt_rpc_error': (this: any, params: any) => void;
    'mt_rpc_answer_unknown': (this: any, params: any) => void;
    'mt_rpc_answer_dropped_running': (this: any, params: any) => void;
    'mt_rpc_answer_dropped': (this: any, params: any) => void;
    'mt_future_salt': (this: any, params: any) => void;
    'mt_future_salts': (this: any, params: any) => void;
    'mt_pong': (this: any, params: any) => void;
    'mt_destroy_session_ok': (this: any, params: any) => void;
    'mt_destroy_session_none': (this: any, params: any) => void;
    'mt_new_session_created': (this: any, params: any) => void;
    'mt_msg_container': (this: any, params: any) => void;
    'mt_message': (this: any, params: any) => void;
    'mt_msg_copy': (this: any, params: any) => void;
    'mt_gzip_packed': (this: any, params: any) => void;
    'mt_msgs_ack': (this: any, params: any) => void;
    'mt_bad_msg_notification': (this: any, params: any) => void;
    'mt_bad_server_salt': (this: any, params: any) => void;
    'mt_msg_resend_req': (this: any, params: any) => void;
    'mt_msgs_state_req': (this: any, params: any) => void;
    'mt_msgs_state_info': (this: any, params: any) => void;
    'mt_msgs_all_info': (this: any, params: any) => void;
    'mt_msg_detailed_info': (this: any, params: any) => void;
    'mt_msg_new_detailed_info': (this: any, params: any) => void;
    'mt_destroy_auth_key_ok': (this: any, params: any) => void;
    'mt_destroy_auth_key_none': (this: any, params: any) => void;
    'mt_destroy_auth_key_fail': (this: any, params: any) => void;
    'mt_req_pq_multi': (this: any, params: any) => void;
    'mt_req_DH_params': (this: any, params: any) => void;
    'mt_set_client_DH_params': (this: any, params: any) => void;
    'mt_rpc_drop_answer': (this: any, params: any) => void;
    'mt_get_future_salts': (this: any, params: any) => void;
    'mt_ping': (this: any, params: any) => void;
    'mt_ping_delay_disconnect': (this: any, params: any) => void;
    'mt_destroy_session': (this: any, params: any) => void;
    'mt_http_wait': (this: any, params: any) => void;
    'mt_destroy_auth_key': (this: any, params: any) => void;
    'boolFalse': (this: any, params: any) => void;
    'boolTrue': (this: any, params: any) => void;
    'true': (this: any, params: any) => void;
    'vector': (this: any, params: any) => void;
    'error': (this: any, params: any) => void;
    'null': (this: any, params: any) => void;
    'inputPeerEmpty': (this: any, params: any) => void;
    'inputPeerSelf': (this: any, params: any) => void;
    'inputPeerChat': (this: any, params: any) => void;
    'inputUserEmpty': (this: any, params: any) => void;
    'inputUserSelf': (this: any, params: any) => void;
    'inputPhoneContact': (this: any, params: any) => void;
    'inputFile': (this: any, params: any) => void;
    'inputMediaEmpty': (this: any, params: any) => void;
    'inputMediaUploadedPhoto': (this: any, params: any) => void;
    'inputMediaPhoto': (this: any, params: any) => void;
    'inputMediaGeoPoint': (this: any, params: any) => void;
    'inputMediaContact': (this: any, params: any) => void;
    'inputChatPhotoEmpty': (this: any, params: any) => void;
    'inputChatUploadedPhoto': (this: any, params: any) => void;
    'inputChatPhoto': (this: any, params: any) => void;
    'inputGeoPointEmpty': (this: any, params: any) => void;
    'inputGeoPoint': (this: any, params: any) => void;
    'inputPhotoEmpty': (this: any, params: any) => void;
    'inputPhoto': (this: any, params: any) => void;
    'inputFileLocation': (this: any, params: any) => void;
    'peerUser': (this: any, params: any) => void;
    'peerChat': (this: any, params: any) => void;
    'storage.fileUnknown': (this: any, params: any) => void;
    'storage.filePartial': (this: any, params: any) => void;
    'storage.fileJpeg': (this: any, params: any) => void;
    'storage.fileGif': (this: any, params: any) => void;
    'storage.filePng': (this: any, params: any) => void;
    'storage.filePdf': (this: any, params: any) => void;
    'storage.fileMp3': (this: any, params: any) => void;
    'storage.fileMov': (this: any, params: any) => void;
    'storage.fileMp4': (this: any, params: any) => void;
    'storage.fileWebp': (this: any, params: any) => void;
    'userEmpty': (this: any, params: any) => void;
    'userProfilePhotoEmpty': (this: any, params: any) => void;
    'userProfilePhoto': (this: any, params: any) => void;
    'userStatusEmpty': (this: any, params: any) => void;
    'userStatusOnline': (this: any, params: any) => void;
    'userStatusOffline': (this: any, params: any) => void;
    'chatEmpty': (this: any, params: any) => void;
    'chat': (this: any, params: any) => void;
    'chatForbidden': (this: any, params: any) => void;
    'chatFull': (this: any, params: any) => void;
    'chatParticipant': (this: any, params: any) => void;
    'chatParticipantsForbidden': (this: any, params: any) => void;
    'chatParticipants': (this: any, params: any) => void;
    'chatPhotoEmpty': (this: any, params: any) => void;
    'chatPhoto': (this: any, params: any) => void;
    'messageEmpty': (this: any, params: any) => void;
    'message': (this: any, params: any) => void;
    'messageService': (this: any, params: any) => void;
    'messageMediaEmpty': (this: any, params: any) => void;
    'messageMediaPhoto': (this: any, params: any) => void;
    'messageMediaGeo': (this: any, params: any) => void;
    'messageMediaContact': (this: any, params: any) => void;
    'messageMediaUnsupported': (this: any, params: any) => void;
    'messageActionEmpty': (this: any, params: any) => void;
    'messageActionChatCreate': (this: any, params: any) => void;
    'messageActionChatEditTitle': (this: any, params: any) => void;
    'messageActionChatEditPhoto': (this: any, params: any) => void;
    'messageActionChatDeletePhoto': (this: any, params: any) => void;
    'messageActionChatAddUser': (this: any, params: any) => void;
    'messageActionChatDeleteUser': (this: any, params: any) => void;
    'dialog': (this: any, params: any) => void;
    'photoEmpty': (this: any, params: any) => void;
    'photo': (this: any, params: any) => void;
    'photoSizeEmpty': (this: any, params: any) => void;
    'photoSize': (this: any, params: any) => void;
    'photoCachedSize': (this: any, params: any) => void;
    'geoPointEmpty': (this: any, params: any) => void;
    'geoPoint': (this: any, params: any) => void;
    'auth.sentCode': (this: any, params: any) => void;
    'auth.authorization': (this: any, params: any) => void;
    'auth.exportedAuthorization': (this: any, params: any) => void;
    'inputNotifyPeer': (this: any, params: any) => void;
    'inputNotifyUsers': (this: any, params: any) => void;
    'inputNotifyChats': (this: any, params: any) => void;
    'inputPeerNotifySettings': (this: any, params: any) => void;
    'peerNotifySettings': (this: any, params: any) => void;
    'peerSettings': (this: any, params: any) => void;
    'wallPaper': (this: any, params: any) => void;
    'inputReportReasonSpam': (this: any, params: any) => void;
    'inputReportReasonViolence': (this: any, params: any) => void;
    'inputReportReasonPornography': (this: any, params: any) => void;
    'inputReportReasonChildAbuse': (this: any, params: any) => void;
    'inputReportReasonOther': (this: any, params: any) => void;
    'userFull': (this: any, params: any) => void;
    'contact': (this: any, params: any) => void;
    'importedContact': (this: any, params: any) => void;
    'contactStatus': (this: any, params: any) => void;
    'contacts.contactsNotModified': (this: any, params: any) => void;
    'contacts.contacts': (this: any, params: any) => void;
    'contacts.importedContacts': (this: any, params: any) => void;
    'contacts.blocked': (this: any, params: any) => void;
    'contacts.blockedSlice': (this: any, params: any) => void;
    'messages.dialogs': (this: any, params: any) => void;
    'messages.dialogsSlice': (this: any, params: any) => void;
    'messages.messages': (this: any, params: any) => void;
    'messages.messagesSlice': (this: any, params: any) => void;
    'messages.chats': (this: any, params: any) => void;
    'messages.chatFull': (this: any, params: any) => void;
    'messages.affectedHistory': (this: any, params: any) => void;
    'inputMessagesFilterEmpty': (this: any, params: any) => void;
    'inputMessagesFilterPhotos': (this: any, params: any) => void;
    'inputMessagesFilterVideo': (this: any, params: any) => void;
    'inputMessagesFilterPhotoVideo': (this: any, params: any) => void;
    'inputMessagesFilterDocument': (this: any, params: any) => void;
    'inputMessagesFilterUrl': (this: any, params: any) => void;
    'inputMessagesFilterGif': (this: any, params: any) => void;
    'updateNewMessage': (this: any, params: any) => void;
    'updateMessageID': (this: any, params: any) => void;
    'updateDeleteMessages': (this: any, params: any) => void;
    'updateUserTyping': (this: any, params: any) => void;
    'updateChatUserTyping': (this: any, params: any) => void;
    'updateChatParticipants': (this: any, params: any) => void;
    'updateUserStatus': (this: any, params: any) => void;
    'updateUserName': (this: any, params: any) => void;
    'updates.state': (this: any, params: any) => void;
    'updates.differenceEmpty': (this: any, params: any) => void;
    'updates.difference': (this: any, params: any) => void;
    'updates.differenceSlice': (this: any, params: any) => void;
    'updatesTooLong': (this: any, params: any) => void;
    'updateShortMessage': (this: any, params: any) => void;
    'updateShortChatMessage': (this: any, params: any) => void;
    'updateShort': (this: any, params: any) => void;
    'updatesCombined': (this: any, params: any) => void;
    'updates': (this: any, params: any) => void;
    'photos.photos': (this: any, params: any) => void;
    'photos.photosSlice': (this: any, params: any) => void;
    'photos.photo': (this: any, params: any) => void;
    'upload.file': (this: any, params: any) => void;
    'dcOption': (this: any, params: any) => void;
    'config': (this: any, params: any) => void;
    'nearestDc': (this: any, params: any) => void;
    'help.appUpdate': (this: any, params: any) => void;
    'help.noAppUpdate': (this: any, params: any) => void;
    'help.inviteText': (this: any, params: any) => void;
    'updateNewEncryptedMessage': (this: any, params: any) => void;
    'updateEncryptedChatTyping': (this: any, params: any) => void;
    'updateEncryption': (this: any, params: any) => void;
    'updateEncryptedMessagesRead': (this: any, params: any) => void;
    'encryptedChatEmpty': (this: any, params: any) => void;
    'encryptedChatWaiting': (this: any, params: any) => void;
    'encryptedChatRequested': (this: any, params: any) => void;
    'encryptedChat': (this: any, params: any) => void;
    'encryptedChatDiscarded': (this: any, params: any) => void;
    'inputEncryptedChat': (this: any, params: any) => void;
    'encryptedFileEmpty': (this: any, params: any) => void;
    'encryptedFile': (this: any, params: any) => void;
    'inputEncryptedFileEmpty': (this: any, params: any) => void;
    'inputEncryptedFileUploaded': (this: any, params: any) => void;
    'inputEncryptedFile': (this: any, params: any) => void;
    'inputEncryptedFileLocation': (this: any, params: any) => void;
    'encryptedMessage': (this: any, params: any) => void;
    'encryptedMessageService': (this: any, params: any) => void;
    'messages.dhConfigNotModified': (this: any, params: any) => void;
    'messages.dhConfig': (this: any, params: any) => void;
    'messages.sentEncryptedMessage': (this: any, params: any) => void;
    'messages.sentEncryptedFile': (this: any, params: any) => void;
    'inputFileBig': (this: any, params: any) => void;
    'inputEncryptedFileBigUploaded': (this: any, params: any) => void;
    'updateChatParticipantAdd': (this: any, params: any) => void;
    'updateChatParticipantDelete': (this: any, params: any) => void;
    'updateDcOptions': (this: any, params: any) => void;
    'inputMediaUploadedDocument': (this: any, params: any) => void;
    'inputMediaDocument': (this: any, params: any) => void;
    'messageMediaDocument': (this: any, params: any) => void;
    'inputDocumentEmpty': (this: any, params: any) => void;
    'inputDocument': (this: any, params: any) => void;
    'inputDocumentFileLocation': (this: any, params: any) => void;
    'documentEmpty': (this: any, params: any) => void;
    'document': (this: any, params: any) => void;
    'help.support': (this: any, params: any) => void;
    'notifyPeer': (this: any, params: any) => void;
    'notifyUsers': (this: any, params: any) => void;
    'notifyChats': (this: any, params: any) => void;
    'updateNotifySettings': (this: any, params: any) => void;
    'sendMessageTypingAction': (this: any, params: any) => void;
    'sendMessageCancelAction': (this: any, params: any) => void;
    'sendMessageRecordVideoAction': (this: any, params: any) => void;
    'sendMessageUploadVideoAction': (this: any, params: any) => void;
    'sendMessageRecordAudioAction': (this: any, params: any) => void;
    'sendMessageUploadAudioAction': (this: any, params: any) => void;
    'sendMessageUploadPhotoAction': (this: any, params: any) => void;
    'sendMessageUploadDocumentAction': (this: any, params: any) => void;
    'sendMessageGeoLocationAction': (this: any, params: any) => void;
    'sendMessageChooseContactAction': (this: any, params: any) => void;
    'contacts.found': (this: any, params: any) => void;
    'updateServiceNotification': (this: any, params: any) => void;
    'userStatusRecently': (this: any, params: any) => void;
    'userStatusLastWeek': (this: any, params: any) => void;
    'userStatusLastMonth': (this: any, params: any) => void;
    'updatePrivacy': (this: any, params: any) => void;
    'inputPrivacyKeyStatusTimestamp': (this: any, params: any) => void;
    'privacyKeyStatusTimestamp': (this: any, params: any) => void;
    'inputPrivacyValueAllowContacts': (this: any, params: any) => void;
    'inputPrivacyValueAllowAll': (this: any, params: any) => void;
    'inputPrivacyValueAllowUsers': (this: any, params: any) => void;
    'inputPrivacyValueDisallowContacts': (this: any, params: any) => void;
    'inputPrivacyValueDisallowAll': (this: any, params: any) => void;
    'inputPrivacyValueDisallowUsers': (this: any, params: any) => void;
    'privacyValueAllowContacts': (this: any, params: any) => void;
    'privacyValueAllowAll': (this: any, params: any) => void;
    'privacyValueAllowUsers': (this: any, params: any) => void;
    'privacyValueDisallowContacts': (this: any, params: any) => void;
    'privacyValueDisallowAll': (this: any, params: any) => void;
    'privacyValueDisallowUsers': (this: any, params: any) => void;
    'account.privacyRules': (this: any, params: any) => void;
    'accountDaysTTL': (this: any, params: any) => void;
    'updateUserPhone': (this: any, params: any) => void;
    'documentAttributeImageSize': (this: any, params: any) => void;
    'documentAttributeAnimated': (this: any, params: any) => void;
    'documentAttributeSticker': (this: any, params: any) => void;
    'documentAttributeVideo': (this: any, params: any) => void;
    'documentAttributeAudio': (this: any, params: any) => void;
    'documentAttributeFilename': (this: any, params: any) => void;
    'messages.stickersNotModified': (this: any, params: any) => void;
    'messages.stickers': (this: any, params: any) => void;
    'stickerPack': (this: any, params: any) => void;
    'messages.allStickersNotModified': (this: any, params: any) => void;
    'messages.allStickers': (this: any, params: any) => void;
    'updateReadHistoryInbox': (this: any, params: any) => void;
    'updateReadHistoryOutbox': (this: any, params: any) => void;
    'messages.affectedMessages': (this: any, params: any) => void;
    'updateWebPage': (this: any, params: any) => void;
    'webPageEmpty': (this: any, params: any) => void;
    'webPagePending': (this: any, params: any) => void;
    'webPage': (this: any, params: any) => void;
    'messageMediaWebPage': (this: any, params: any) => void;
    'authorization': (this: any, params: any) => void;
    'account.authorizations': (this: any, params: any) => void;
    'account.password': (this: any, params: any) => void;
    'account.passwordSettings': (this: any, params: any) => void;
    'account.passwordInputSettings': (this: any, params: any) => void;
    'auth.passwordRecovery': (this: any, params: any) => void;
    'inputMediaVenue': (this: any, params: any) => void;
    'messageMediaVenue': (this: any, params: any) => void;
    'receivedNotifyMessage': (this: any, params: any) => void;
    'chatInviteExported': (this: any, params: any) => void;
    'chatInviteAlready': (this: any, params: any) => void;
    'chatInvite': (this: any, params: any) => void;
    'messageActionChatJoinedByLink': (this: any, params: any) => void;
    'updateReadMessagesContents': (this: any, params: any) => void;
    'inputStickerSetEmpty': (this: any, params: any) => void;
    'inputStickerSetID': (this: any, params: any) => void;
    'inputStickerSetShortName': (this: any, params: any) => void;
    'stickerSet': (this: any, params: any) => void;
    'messages.stickerSet': (this: any, params: any) => void;
    'user': (this: any, params: any) => void;
    'botCommand': (this: any, params: any) => void;
    'botInfo': (this: any, params: any) => void;
    'keyboardButton': (this: any, params: any) => void;
    'keyboardButtonRow': (this: any, params: any) => void;
    'replyKeyboardHide': (this: any, params: any) => void;
    'replyKeyboardForceReply': (this: any, params: any) => void;
    'replyKeyboardMarkup': (this: any, params: any) => void;
    'inputPeerUser': (this: any, params: any) => void;
    'inputUser': (this: any, params: any) => void;
    'messageEntityUnknown': (this: any, params: any) => void;
    'messageEntityMention': (this: any, params: any) => void;
    'messageEntityHashtag': (this: any, params: any) => void;
    'messageEntityBotCommand': (this: any, params: any) => void;
    'messageEntityUrl': (this: any, params: any) => void;
    'messageEntityEmail': (this: any, params: any) => void;
    'messageEntityBold': (this: any, params: any) => void;
    'messageEntityItalic': (this: any, params: any) => void;
    'messageEntityCode': (this: any, params: any) => void;
    'messageEntityPre': (this: any, params: any) => void;
    'messageEntityTextUrl': (this: any, params: any) => void;
    'updateShortSentMessage': (this: any, params: any) => void;
    'inputChannelEmpty': (this: any, params: any) => void;
    'inputChannel': (this: any, params: any) => void;
    'peerChannel': (this: any, params: any) => void;
    'inputPeerChannel': (this: any, params: any) => void;
    'channel': (this: any, params: any) => void;
    'channelForbidden': (this: any, params: any) => void;
    'contacts.resolvedPeer': (this: any, params: any) => void;
    'channelFull': (this: any, params: any) => void;
    'messageRange': (this: any, params: any) => void;
    'messages.channelMessages': (this: any, params: any) => void;
    'messageActionChannelCreate': (this: any, params: any) => void;
    'updateChannelTooLong': (this: any, params: any) => void;
    'updateChannel': (this: any, params: any) => void;
    'updateNewChannelMessage': (this: any, params: any) => void;
    'updateReadChannelInbox': (this: any, params: any) => void;
    'updateDeleteChannelMessages': (this: any, params: any) => void;
    'updateChannelMessageViews': (this: any, params: any) => void;
    'updates.channelDifferenceEmpty': (this: any, params: any) => void;
    'updates.channelDifferenceTooLong': (this: any, params: any) => void;
    'updates.channelDifference': (this: any, params: any) => void;
    'channelMessagesFilterEmpty': (this: any, params: any) => void;
    'channelMessagesFilter': (this: any, params: any) => void;
    'channelParticipant': (this: any, params: any) => void;
    'channelParticipantSelf': (this: any, params: any) => void;
    'channelParticipantCreator': (this: any, params: any) => void;
    'channelParticipantsRecent': (this: any, params: any) => void;
    'channelParticipantsAdmins': (this: any, params: any) => void;
    'channelParticipantsKicked': (this: any, params: any) => void;
    'channels.channelParticipants': (this: any, params: any) => void;
    'channels.channelParticipant': (this: any, params: any) => void;
    'chatParticipantCreator': (this: any, params: any) => void;
    'chatParticipantAdmin': (this: any, params: any) => void;
    'updateChatParticipantAdmin': (this: any, params: any) => void;
    'messageActionChatMigrateTo': (this: any, params: any) => void;
    'messageActionChannelMigrateFrom': (this: any, params: any) => void;
    'channelParticipantsBots': (this: any, params: any) => void;
    'help.termsOfService': (this: any, params: any) => void;
    'updateNewStickerSet': (this: any, params: any) => void;
    'updateStickerSetsOrder': (this: any, params: any) => void;
    'updateStickerSets': (this: any, params: any) => void;
    'messages.savedGifsNotModified': (this: any, params: any) => void;
    'messages.savedGifs': (this: any, params: any) => void;
    'updateSavedGifs': (this: any, params: any) => void;
    'inputBotInlineMessageMediaAuto': (this: any, params: any) => void;
    'inputBotInlineMessageText': (this: any, params: any) => void;
    'inputBotInlineResult': (this: any, params: any) => void;
    'botInlineMessageMediaAuto': (this: any, params: any) => void;
    'botInlineMessageText': (this: any, params: any) => void;
    'botInlineResult': (this: any, params: any) => void;
    'messages.botResults': (this: any, params: any) => void;
    'updateBotInlineQuery': (this: any, params: any) => void;
    'updateBotInlineSend': (this: any, params: any) => void;
    'inputMessagesFilterVoice': (this: any, params: any) => void;
    'inputMessagesFilterMusic': (this: any, params: any) => void;
    'inputPrivacyKeyChatInvite': (this: any, params: any) => void;
    'privacyKeyChatInvite': (this: any, params: any) => void;
    'exportedMessageLink': (this: any, params: any) => void;
    'messageFwdHeader': (this: any, params: any) => void;
    'updateEditChannelMessage': (this: any, params: any) => void;
    'messageActionPinMessage': (this: any, params: any) => void;
    'auth.codeTypeSms': (this: any, params: any) => void;
    'auth.codeTypeCall': (this: any, params: any) => void;
    'auth.codeTypeFlashCall': (this: any, params: any) => void;
    'auth.sentCodeTypeApp': (this: any, params: any) => void;
    'auth.sentCodeTypeSms': (this: any, params: any) => void;
    'auth.sentCodeTypeCall': (this: any, params: any) => void;
    'auth.sentCodeTypeFlashCall': (this: any, params: any) => void;
    'keyboardButtonUrl': (this: any, params: any) => void;
    'keyboardButtonCallback': (this: any, params: any) => void;
    'keyboardButtonRequestPhone': (this: any, params: any) => void;
    'keyboardButtonRequestGeoLocation': (this: any, params: any) => void;
    'keyboardButtonSwitchInline': (this: any, params: any) => void;
    'replyInlineMarkup': (this: any, params: any) => void;
    'messages.botCallbackAnswer': (this: any, params: any) => void;
    'updateBotCallbackQuery': (this: any, params: any) => void;
    'messages.messageEditData': (this: any, params: any) => void;
    'updateEditMessage': (this: any, params: any) => void;
    'inputBotInlineMessageMediaGeo': (this: any, params: any) => void;
    'inputBotInlineMessageMediaVenue': (this: any, params: any) => void;
    'inputBotInlineMessageMediaContact': (this: any, params: any) => void;
    'botInlineMessageMediaGeo': (this: any, params: any) => void;
    'botInlineMessageMediaVenue': (this: any, params: any) => void;
    'botInlineMessageMediaContact': (this: any, params: any) => void;
    'inputBotInlineResultPhoto': (this: any, params: any) => void;
    'inputBotInlineResultDocument': (this: any, params: any) => void;
    'botInlineMediaResult': (this: any, params: any) => void;
    'inputBotInlineMessageID': (this: any, params: any) => void;
    'updateInlineBotCallbackQuery': (this: any, params: any) => void;
    'inlineBotSwitchPM': (this: any, params: any) => void;
    'messages.peerDialogs': (this: any, params: any) => void;
    'topPeer': (this: any, params: any) => void;
    'topPeerCategoryBotsPM': (this: any, params: any) => void;
    'topPeerCategoryBotsInline': (this: any, params: any) => void;
    'topPeerCategoryCorrespondents': (this: any, params: any) => void;
    'topPeerCategoryGroups': (this: any, params: any) => void;
    'topPeerCategoryChannels': (this: any, params: any) => void;
    'topPeerCategoryPeers': (this: any, params: any) => void;
    'contacts.topPeersNotModified': (this: any, params: any) => void;
    'contacts.topPeers': (this: any, params: any) => void;
    'messageEntityMentionName': (this: any, params: any) => void;
    'inputMessageEntityMentionName': (this: any, params: any) => void;
    'inputMessagesFilterChatPhotos': (this: any, params: any) => void;
    'updateReadChannelOutbox': (this: any, params: any) => void;
    'updateDraftMessage': (this: any, params: any) => void;
    'draftMessageEmpty': (this: any, params: any) => void;
    'draftMessage': (this: any, params: any) => void;
    'messageActionHistoryClear': (this: any, params: any) => void;
    'messages.featuredStickersNotModified': (this: any, params: any) => void;
    'messages.featuredStickers': (this: any, params: any) => void;
    'updateReadFeaturedStickers': (this: any, params: any) => void;
    'messages.recentStickersNotModified': (this: any, params: any) => void;
    'messages.recentStickers': (this: any, params: any) => void;
    'updateRecentStickers': (this: any, params: any) => void;
    'messages.archivedStickers': (this: any, params: any) => void;
    'messages.stickerSetInstallResultSuccess': (this: any, params: any) => void;
    'messages.stickerSetInstallResultArchive': (this: any, params: any) => void;
    'stickerSetCovered': (this: any, params: any) => void;
    'updateConfig': (this: any, params: any) => void;
    'updatePtsChanged': (this: any, params: any) => void;
    'inputMediaPhotoExternal': (this: any, params: any) => void;
    'inputMediaDocumentExternal': (this: any, params: any) => void;
    'stickerSetMultiCovered': (this: any, params: any) => void;
    'maskCoords': (this: any, params: any) => void;
    'documentAttributeHasStickers': (this: any, params: any) => void;
    'inputStickeredMediaPhoto': (this: any, params: any) => void;
    'inputStickeredMediaDocument': (this: any, params: any) => void;
    'game': (this: any, params: any) => void;
    'inputBotInlineResultGame': (this: any, params: any) => void;
    'inputBotInlineMessageGame': (this: any, params: any) => void;
    'messageMediaGame': (this: any, params: any) => void;
    'inputMediaGame': (this: any, params: any) => void;
    'inputGameID': (this: any, params: any) => void;
    'inputGameShortName': (this: any, params: any) => void;
    'keyboardButtonGame': (this: any, params: any) => void;
    'messageActionGameScore': (this: any, params: any) => void;
    'highScore': (this: any, params: any) => void;
    'messages.highScores': (this: any, params: any) => void;
    'updates.differenceTooLong': (this: any, params: any) => void;
    'updateChannelWebPage': (this: any, params: any) => void;
    'messages.chatsSlice': (this: any, params: any) => void;
    'textEmpty': (this: any, params: any) => void;
    'textPlain': (this: any, params: any) => void;
    'textBold': (this: any, params: any) => void;
    'textItalic': (this: any, params: any) => void;
    'textUnderline': (this: any, params: any) => void;
    'textStrike': (this: any, params: any) => void;
    'textFixed': (this: any, params: any) => void;
    'textUrl': (this: any, params: any) => void;
    'textEmail': (this: any, params: any) => void;
    'textConcat': (this: any, params: any) => void;
    'pageBlockUnsupported': (this: any, params: any) => void;
    'pageBlockTitle': (this: any, params: any) => void;
    'pageBlockSubtitle': (this: any, params: any) => void;
    'pageBlockAuthorDate': (this: any, params: any) => void;
    'pageBlockHeader': (this: any, params: any) => void;
    'pageBlockSubheader': (this: any, params: any) => void;
    'pageBlockParagraph': (this: any, params: any) => void;
    'pageBlockPreformatted': (this: any, params: any) => void;
    'pageBlockFooter': (this: any, params: any) => void;
    'pageBlockDivider': (this: any, params: any) => void;
    'pageBlockAnchor': (this: any, params: any) => void;
    'pageBlockList': (this: any, params: any) => void;
    'pageBlockBlockquote': (this: any, params: any) => void;
    'pageBlockPullquote': (this: any, params: any) => void;
    'pageBlockPhoto': (this: any, params: any) => void;
    'pageBlockVideo': (this: any, params: any) => void;
    'pageBlockCover': (this: any, params: any) => void;
    'pageBlockEmbed': (this: any, params: any) => void;
    'pageBlockEmbedPost': (this: any, params: any) => void;
    'pageBlockCollage': (this: any, params: any) => void;
    'pageBlockSlideshow': (this: any, params: any) => void;
    'webPageNotModified': (this: any, params: any) => void;
    'inputPrivacyKeyPhoneCall': (this: any, params: any) => void;
    'privacyKeyPhoneCall': (this: any, params: any) => void;
    'sendMessageGamePlayAction': (this: any, params: any) => void;
    'phoneCallDiscardReasonMissed': (this: any, params: any) => void;
    'phoneCallDiscardReasonDisconnect': (this: any, params: any) => void;
    'phoneCallDiscardReasonHangup': (this: any, params: any) => void;
    'phoneCallDiscardReasonBusy': (this: any, params: any) => void;
    'updateDialogPinned': (this: any, params: any) => void;
    'updatePinnedDialogs': (this: any, params: any) => void;
    'dataJSON': (this: any, params: any) => void;
    'updateBotWebhookJSON': (this: any, params: any) => void;
    'updateBotWebhookJSONQuery': (this: any, params: any) => void;
    'labeledPrice': (this: any, params: any) => void;
    'invoice': (this: any, params: any) => void;
    'inputMediaInvoice': (this: any, params: any) => void;
    'paymentCharge': (this: any, params: any) => void;
    'messageActionPaymentSentMe': (this: any, params: any) => void;
    'messageMediaInvoice': (this: any, params: any) => void;
    'postAddress': (this: any, params: any) => void;
    'paymentRequestedInfo': (this: any, params: any) => void;
    'keyboardButtonBuy': (this: any, params: any) => void;
    'messageActionPaymentSent': (this: any, params: any) => void;
    'paymentSavedCredentialsCard': (this: any, params: any) => void;
    'webDocument': (this: any, params: any) => void;
    'inputWebDocument': (this: any, params: any) => void;
    'inputWebFileLocation': (this: any, params: any) => void;
    'upload.webFile': (this: any, params: any) => void;
    'payments.paymentForm': (this: any, params: any) => void;
    'payments.validatedRequestedInfo': (this: any, params: any) => void;
    'payments.paymentResult': (this: any, params: any) => void;
    'payments.paymentReceipt': (this: any, params: any) => void;
    'payments.savedInfo': (this: any, params: any) => void;
    'inputPaymentCredentialsSaved': (this: any, params: any) => void;
    'inputPaymentCredentials': (this: any, params: any) => void;
    'account.tmpPassword': (this: any, params: any) => void;
    'shippingOption': (this: any, params: any) => void;
    'updateBotShippingQuery': (this: any, params: any) => void;
    'updateBotPrecheckoutQuery': (this: any, params: any) => void;
    'inputStickerSetItem': (this: any, params: any) => void;
    'updatePhoneCall': (this: any, params: any) => void;
    'inputPhoneCall': (this: any, params: any) => void;
    'phoneCallEmpty': (this: any, params: any) => void;
    'phoneCallWaiting': (this: any, params: any) => void;
    'phoneCallRequested': (this: any, params: any) => void;
    'phoneCallAccepted': (this: any, params: any) => void;
    'phoneCall': (this: any, params: any) => void;
    'phoneCallDiscarded': (this: any, params: any) => void;
    'phoneConnection': (this: any, params: any) => void;
    'phoneCallProtocol': (this: any, params: any) => void;
    'phone.phoneCall': (this: any, params: any) => void;
    'inputMessagesFilterPhoneCalls': (this: any, params: any) => void;
    'messageActionPhoneCall': (this: any, params: any) => void;
    'inputMessagesFilterRoundVoice': (this: any, params: any) => void;
    'inputMessagesFilterRoundVideo': (this: any, params: any) => void;
    'sendMessageRecordRoundAction': (this: any, params: any) => void;
    'sendMessageUploadRoundAction': (this: any, params: any) => void;
    'upload.fileCdnRedirect': (this: any, params: any) => void;
    'upload.cdnFileReuploadNeeded': (this: any, params: any) => void;
    'upload.cdnFile': (this: any, params: any) => void;
    'cdnPublicKey': (this: any, params: any) => void;
    'cdnConfig': (this: any, params: any) => void;
    'pageBlockChannel': (this: any, params: any) => void;
    'langPackString': (this: any, params: any) => void;
    'langPackStringPluralized': (this: any, params: any) => void;
    'langPackStringDeleted': (this: any, params: any) => void;
    'langPackDifference': (this: any, params: any) => void;
    'langPackLanguage': (this: any, params: any) => void;
    'updateLangPackTooLong': (this: any, params: any) => void;
    'updateLangPack': (this: any, params: any) => void;
    'channelParticipantAdmin': (this: any, params: any) => void;
    'channelParticipantBanned': (this: any, params: any) => void;
    'channelParticipantsBanned': (this: any, params: any) => void;
    'channelParticipantsSearch': (this: any, params: any) => void;
    'channelAdminLogEventActionChangeTitle': (this: any, params: any) => void;
    'channelAdminLogEventActionChangeAbout': (this: any, params: any) => void;
    'channelAdminLogEventActionChangeUsername': (this: any, params: any) => void;
    'channelAdminLogEventActionChangePhoto': (this: any, params: any) => void;
    'channelAdminLogEventActionToggleInvites': (this: any, params: any) => void;
    'channelAdminLogEventActionToggleSignatures': (this: any, params: any) => void;
    'channelAdminLogEventActionUpdatePinned': (this: any, params: any) => void;
    'channelAdminLogEventActionEditMessage': (this: any, params: any) => void;
    'channelAdminLogEventActionDeleteMessage': (this: any, params: any) => void;
    'channelAdminLogEventActionParticipantJoin': (this: any, params: any) => void;
    'channelAdminLogEventActionParticipantLeave': (this: any, params: any) => void;
    'channelAdminLogEventActionParticipantInvite': (this: any, params: any) => void;
    'channelAdminLogEventActionParticipantToggleBan': (this: any, params: any) => void;
    'channelAdminLogEventActionParticipantToggleAdmin': (this: any, params: any) => void;
    'channelAdminLogEvent': (this: any, params: any) => void;
    'channels.adminLogResults': (this: any, params: any) => void;
    'channelAdminLogEventsFilter': (this: any, params: any) => void;
    'topPeerCategoryPhoneCalls': (this: any, params: any) => void;
    'pageBlockAudio': (this: any, params: any) => void;
    'popularContact': (this: any, params: any) => void;
    'messageActionScreenshotTaken': (this: any, params: any) => void;
    'messages.favedStickersNotModified': (this: any, params: any) => void;
    'messages.favedStickers': (this: any, params: any) => void;
    'updateFavedStickers': (this: any, params: any) => void;
    'updateChannelReadMessagesContents': (this: any, params: any) => void;
    'inputMessagesFilterMyMentions': (this: any, params: any) => void;
    'updateContactsReset': (this: any, params: any) => void;
    'channelAdminLogEventActionChangeStickerSet': (this: any, params: any) => void;
    'messageActionCustomAction': (this: any, params: any) => void;
    'inputPaymentCredentialsApplePay': (this: any, params: any) => void;
    'inputMessagesFilterGeo': (this: any, params: any) => void;
    'inputMessagesFilterContacts': (this: any, params: any) => void;
    'updateChannelAvailableMessages': (this: any, params: any) => void;
    'channelAdminLogEventActionTogglePreHistoryHidden': (this: any, params: any) => void;
    'inputMediaGeoLive': (this: any, params: any) => void;
    'messageMediaGeoLive': (this: any, params: any) => void;
    'recentMeUrlUnknown': (this: any, params: any) => void;
    'recentMeUrlUser': (this: any, params: any) => void;
    'recentMeUrlChat': (this: any, params: any) => void;
    'recentMeUrlChatInvite': (this: any, params: any) => void;
    'recentMeUrlStickerSet': (this: any, params: any) => void;
    'help.recentMeUrls': (this: any, params: any) => void;
    'channels.channelParticipantsNotModified': (this: any, params: any) => void;
    'messages.messagesNotModified': (this: any, params: any) => void;
    'inputSingleMedia': (this: any, params: any) => void;
    'webAuthorization': (this: any, params: any) => void;
    'account.webAuthorizations': (this: any, params: any) => void;
    'inputMessageID': (this: any, params: any) => void;
    'inputMessageReplyTo': (this: any, params: any) => void;
    'inputMessagePinned': (this: any, params: any) => void;
    'messageEntityPhone': (this: any, params: any) => void;
    'messageEntityCashtag': (this: any, params: any) => void;
    'messageActionBotAllowed': (this: any, params: any) => void;
    'inputDialogPeer': (this: any, params: any) => void;
    'dialogPeer': (this: any, params: any) => void;
    'messages.foundStickerSetsNotModified': (this: any, params: any) => void;
    'messages.foundStickerSets': (this: any, params: any) => void;
    'fileHash': (this: any, params: any) => void;
    'webDocumentNoProxy': (this: any, params: any) => void;
    'inputClientProxy': (this: any, params: any) => void;
    'help.termsOfServiceUpdateEmpty': (this: any, params: any) => void;
    'help.termsOfServiceUpdate': (this: any, params: any) => void;
    'inputSecureFileUploaded': (this: any, params: any) => void;
    'inputSecureFile': (this: any, params: any) => void;
    'inputSecureFileLocation': (this: any, params: any) => void;
    'secureFileEmpty': (this: any, params: any) => void;
    'secureFile': (this: any, params: any) => void;
    'secureData': (this: any, params: any) => void;
    'securePlainPhone': (this: any, params: any) => void;
    'securePlainEmail': (this: any, params: any) => void;
    'secureValueTypePersonalDetails': (this: any, params: any) => void;
    'secureValueTypePassport': (this: any, params: any) => void;
    'secureValueTypeDriverLicense': (this: any, params: any) => void;
    'secureValueTypeIdentityCard': (this: any, params: any) => void;
    'secureValueTypeInternalPassport': (this: any, params: any) => void;
    'secureValueTypeAddress': (this: any, params: any) => void;
    'secureValueTypeUtilityBill': (this: any, params: any) => void;
    'secureValueTypeBankStatement': (this: any, params: any) => void;
    'secureValueTypeRentalAgreement': (this: any, params: any) => void;
    'secureValueTypePassportRegistration': (this: any, params: any) => void;
    'secureValueTypeTemporaryRegistration': (this: any, params: any) => void;
    'secureValueTypePhone': (this: any, params: any) => void;
    'secureValueTypeEmail': (this: any, params: any) => void;
    'secureValue': (this: any, params: any) => void;
    'inputSecureValue': (this: any, params: any) => void;
    'secureValueHash': (this: any, params: any) => void;
    'secureValueErrorData': (this: any, params: any) => void;
    'secureValueErrorFrontSide': (this: any, params: any) => void;
    'secureValueErrorReverseSide': (this: any, params: any) => void;
    'secureValueErrorSelfie': (this: any, params: any) => void;
    'secureValueErrorFile': (this: any, params: any) => void;
    'secureValueErrorFiles': (this: any, params: any) => void;
    'secureCredentialsEncrypted': (this: any, params: any) => void;
    'account.authorizationForm': (this: any, params: any) => void;
    'account.sentEmailCode': (this: any, params: any) => void;
    'messageActionSecureValuesSentMe': (this: any, params: any) => void;
    'messageActionSecureValuesSent': (this: any, params: any) => void;
    'help.deepLinkInfoEmpty': (this: any, params: any) => void;
    'help.deepLinkInfo': (this: any, params: any) => void;
    'savedPhoneContact': (this: any, params: any) => void;
    'account.takeout': (this: any, params: any) => void;
    'inputTakeoutFileLocation': (this: any, params: any) => void;
    'updateDialogUnreadMark': (this: any, params: any) => void;
    'messages.dialogsNotModified': (this: any, params: any) => void;
    'inputWebFileGeoPointLocation': (this: any, params: any) => void;
    'contacts.topPeersDisabled': (this: any, params: any) => void;
    'inputReportReasonCopyright': (this: any, params: any) => void;
    'passwordKdfAlgoUnknown': (this: any, params: any) => void;
    'securePasswordKdfAlgoUnknown': (this: any, params: any) => void;
    'securePasswordKdfAlgoPBKDF2HMACSHA512iter100000': (this: any, params: any) => void;
    'securePasswordKdfAlgoSHA512': (this: any, params: any) => void;
    'secureSecretSettings': (this: any, params: any) => void;
    'passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow': (this: any, params: any) => void;
    'inputCheckPasswordEmpty': (this: any, params: any) => void;
    'inputCheckPasswordSRP': (this: any, params: any) => void;
    'secureValueError': (this: any, params: any) => void;
    'secureValueErrorTranslationFile': (this: any, params: any) => void;
    'secureValueErrorTranslationFiles': (this: any, params: any) => void;
    'secureRequiredType': (this: any, params: any) => void;
    'secureRequiredTypeOneOf': (this: any, params: any) => void;
    'help.passportConfigNotModified': (this: any, params: any) => void;
    'help.passportConfig': (this: any, params: any) => void;
    'inputAppEvent': (this: any, params: any) => void;
    'jsonObjectValue': (this: any, params: any) => void;
    'jsonNull': (this: any, params: any) => void;
    'jsonBool': (this: any, params: any) => void;
    'jsonNumber': (this: any, params: any) => void;
    'jsonString': (this: any, params: any) => void;
    'jsonArray': (this: any, params: any) => void;
    'jsonObject': (this: any, params: any) => void;
    'inputNotifyBroadcasts': (this: any, params: any) => void;
    'notifyBroadcasts': (this: any, params: any) => void;
    'textSubscript': (this: any, params: any) => void;
    'textSuperscript': (this: any, params: any) => void;
    'textMarked': (this: any, params: any) => void;
    'textPhone': (this: any, params: any) => void;
    'textImage': (this: any, params: any) => void;
    'pageBlockKicker': (this: any, params: any) => void;
    'pageTableCell': (this: any, params: any) => void;
    'pageTableRow': (this: any, params: any) => void;
    'pageBlockTable': (this: any, params: any) => void;
    'pageCaption': (this: any, params: any) => void;
    'pageListItemText': (this: any, params: any) => void;
    'pageListItemBlocks': (this: any, params: any) => void;
    'pageListOrderedItemText': (this: any, params: any) => void;
    'pageListOrderedItemBlocks': (this: any, params: any) => void;
    'pageBlockOrderedList': (this: any, params: any) => void;
    'pageBlockDetails': (this: any, params: any) => void;
    'pageRelatedArticle': (this: any, params: any) => void;
    'pageBlockRelatedArticles': (this: any, params: any) => void;
    'pageBlockMap': (this: any, params: any) => void;
    'page': (this: any, params: any) => void;
    'inputPrivacyKeyPhoneP2P': (this: any, params: any) => void;
    'privacyKeyPhoneP2P': (this: any, params: any) => void;
    'textAnchor': (this: any, params: any) => void;
    'help.supportName': (this: any, params: any) => void;
    'help.userInfoEmpty': (this: any, params: any) => void;
    'help.userInfo': (this: any, params: any) => void;
    'messageActionContactSignUp': (this: any, params: any) => void;
    'updateMessagePoll': (this: any, params: any) => void;
    'pollAnswer': (this: any, params: any) => void;
    'poll': (this: any, params: any) => void;
    'pollAnswerVoters': (this: any, params: any) => void;
    'pollResults': (this: any, params: any) => void;
    'inputMediaPoll': (this: any, params: any) => void;
    'messageMediaPoll': (this: any, params: any) => void;
    'chatOnlines': (this: any, params: any) => void;
    'statsURL': (this: any, params: any) => void;
    'photoStrippedSize': (this: any, params: any) => void;
    'chatAdminRights': (this: any, params: any) => void;
    'chatBannedRights': (this: any, params: any) => void;
    'updateChatDefaultBannedRights': (this: any, params: any) => void;
    'inputWallPaper': (this: any, params: any) => void;
    'inputWallPaperSlug': (this: any, params: any) => void;
    'channelParticipantsContacts': (this: any, params: any) => void;
    'channelAdminLogEventActionDefaultBannedRights': (this: any, params: any) => void;
    'channelAdminLogEventActionStopPoll': (this: any, params: any) => void;
    'account.wallPapersNotModified': (this: any, params: any) => void;
    'account.wallPapers': (this: any, params: any) => void;
    'codeSettings': (this: any, params: any) => void;
    'wallPaperSettings': (this: any, params: any) => void;
    'autoDownloadSettings': (this: any, params: any) => void;
    'account.autoDownloadSettings': (this: any, params: any) => void;
    'emojiKeyword': (this: any, params: any) => void;
    'emojiKeywordDeleted': (this: any, params: any) => void;
    'emojiKeywordsDifference': (this: any, params: any) => void;
    'emojiURL': (this: any, params: any) => void;
    'emojiLanguage': (this: any, params: any) => void;
    'inputPrivacyKeyForwards': (this: any, params: any) => void;
    'privacyKeyForwards': (this: any, params: any) => void;
    'inputPrivacyKeyProfilePhoto': (this: any, params: any) => void;
    'privacyKeyProfilePhoto': (this: any, params: any) => void;
    'inputPhotoFileLocation': (this: any, params: any) => void;
    'inputPhotoLegacyFileLocation': (this: any, params: any) => void;
    'inputPeerPhotoFileLocation': (this: any, params: any) => void;
    'inputStickerSetThumb': (this: any, params: any) => void;
    'folder': (this: any, params: any) => void;
    'dialogFolder': (this: any, params: any) => void;
    'inputDialogPeerFolder': (this: any, params: any) => void;
    'dialogPeerFolder': (this: any, params: any) => void;
    'inputFolderPeer': (this: any, params: any) => void;
    'folderPeer': (this: any, params: any) => void;
    'updateFolderPeers': (this: any, params: any) => void;
    'inputUserFromMessage': (this: any, params: any) => void;
    'inputChannelFromMessage': (this: any, params: any) => void;
    'inputPeerUserFromMessage': (this: any, params: any) => void;
    'inputPeerChannelFromMessage': (this: any, params: any) => void;
    'inputPrivacyKeyPhoneNumber': (this: any, params: any) => void;
    'privacyKeyPhoneNumber': (this: any, params: any) => void;
    'topPeerCategoryForwardUsers': (this: any, params: any) => void;
    'topPeerCategoryForwardChats': (this: any, params: any) => void;
    'channelAdminLogEventActionChangeLinkedChat': (this: any, params: any) => void;
    'messages.searchCounter': (this: any, params: any) => void;
    'keyboardButtonUrlAuth': (this: any, params: any) => void;
    'inputKeyboardButtonUrlAuth': (this: any, params: any) => void;
    'urlAuthResultRequest': (this: any, params: any) => void;
    'urlAuthResultAccepted': (this: any, params: any) => void;
    'urlAuthResultDefault': (this: any, params: any) => void;
    'inputPrivacyValueAllowChatParticipants': (this: any, params: any) => void;
    'inputPrivacyValueDisallowChatParticipants': (this: any, params: any) => void;
    'privacyValueAllowChatParticipants': (this: any, params: any) => void;
    'privacyValueDisallowChatParticipants': (this: any, params: any) => void;
    'messageEntityUnderline': (this: any, params: any) => void;
    'messageEntityStrike': (this: any, params: any) => void;
    'messageEntityBlockquote': (this: any, params: any) => void;
    'updatePeerSettings': (this: any, params: any) => void;
    'channelLocationEmpty': (this: any, params: any) => void;
    'channelLocation': (this: any, params: any) => void;
    'peerLocated': (this: any, params: any) => void;
    'updatePeerLocated': (this: any, params: any) => void;
    'channelAdminLogEventActionChangeLocation': (this: any, params: any) => void;
    'inputReportReasonGeoIrrelevant': (this: any, params: any) => void;
    'channelAdminLogEventActionToggleSlowMode': (this: any, params: any) => void;
    'auth.authorizationSignUpRequired': (this: any, params: any) => void;
    'payments.paymentVerificationNeeded': (this: any, params: any) => void;
    'inputStickerSetAnimatedEmoji': (this: any, params: any) => void;
    'updateNewScheduledMessage': (this: any, params: any) => void;
    'updateDeleteScheduledMessages': (this: any, params: any) => void;
    'restrictionReason': (this: any, params: any) => void;
    'inputTheme': (this: any, params: any) => void;
    'inputThemeSlug': (this: any, params: any) => void;
    'theme': (this: any, params: any) => void;
    'account.themesNotModified': (this: any, params: any) => void;
    'account.themes': (this: any, params: any) => void;
    'updateTheme': (this: any, params: any) => void;
    'inputPrivacyKeyAddedByPhone': (this: any, params: any) => void;
    'privacyKeyAddedByPhone': (this: any, params: any) => void;
    'updateGeoLiveViewed': (this: any, params: any) => void;
    'updateLoginToken': (this: any, params: any) => void;
    'auth.loginToken': (this: any, params: any) => void;
    'auth.loginTokenMigrateTo': (this: any, params: any) => void;
    'auth.loginTokenSuccess': (this: any, params: any) => void;
    'account.contentSettings': (this: any, params: any) => void;
    'messages.inactiveChats': (this: any, params: any) => void;
    'baseThemeClassic': (this: any, params: any) => void;
    'baseThemeDay': (this: any, params: any) => void;
    'baseThemeNight': (this: any, params: any) => void;
    'baseThemeTinted': (this: any, params: any) => void;
    'baseThemeArctic': (this: any, params: any) => void;
    'inputWallPaperNoFile': (this: any, params: any) => void;
    'wallPaperNoFile': (this: any, params: any) => void;
    'inputThemeSettings': (this: any, params: any) => void;
    'themeSettings': (this: any, params: any) => void;
    'webPageAttributeTheme': (this: any, params: any) => void;
    'updateMessagePollVote': (this: any, params: any) => void;
    'messageUserVote': (this: any, params: any) => void;
    'messageUserVoteInputOption': (this: any, params: any) => void;
    'messageUserVoteMultiple': (this: any, params: any) => void;
    'messages.votesList': (this: any, params: any) => void;
    'keyboardButtonRequestPoll': (this: any, params: any) => void;
    'messageEntityBankCard': (this: any, params: any) => void;
    'bankCardOpenUrl': (this: any, params: any) => void;
    'payments.bankCardData': (this: any, params: any) => void;
    'peerSelfLocated': (this: any, params: any) => void;
    'dialogFilter': (this: any, params: any) => void;
    'dialogFilterSuggested': (this: any, params: any) => void;
    'updateDialogFilter': (this: any, params: any) => void;
    'updateDialogFilterOrder': (this: any, params: any) => void;
    'updateDialogFilters': (this: any, params: any) => void;
    'statsDateRangeDays': (this: any, params: any) => void;
    'statsAbsValueAndPrev': (this: any, params: any) => void;
    'statsPercentValue': (this: any, params: any) => void;
    'statsGraphAsync': (this: any, params: any) => void;
    'statsGraphError': (this: any, params: any) => void;
    'statsGraph': (this: any, params: any) => void;
    'messageInteractionCounters': (this: any, params: any) => void;
    'stats.broadcastStats': (this: any, params: any) => void;
    'inputMediaDice': (this: any, params: any) => void;
    'messageMediaDice': (this: any, params: any) => void;
    'inputStickerSetDice': (this: any, params: any) => void;
    'help.promoDataEmpty': (this: any, params: any) => void;
    'help.promoData': (this: any, params: any) => void;
    'videoSize': (this: any, params: any) => void;
    'updatePhoneCallSignalingData': (this: any, params: any) => void;
    'chatInvitePeek': (this: any, params: any) => void;
    'statsGroupTopPoster': (this: any, params: any) => void;
    'statsGroupTopAdmin': (this: any, params: any) => void;
    'statsGroupTopInviter': (this: any, params: any) => void;
    'stats.megagroupStats': (this: any, params: any) => void;
    'globalPrivacySettings': (this: any, params: any) => void;
    'phoneConnectionWebrtc': (this: any, params: any) => void;
    'help.countryCode': (this: any, params: any) => void;
    'help.country': (this: any, params: any) => void;
    'help.countriesListNotModified': (this: any, params: any) => void;
    'help.countriesList': (this: any, params: any) => void;
    'messageViews': (this: any, params: any) => void;
    'updateChannelMessageForwards': (this: any, params: any) => void;
    'photoSizeProgressive': (this: any, params: any) => void;
    'messages.messageViews': (this: any, params: any) => void;
    'updateReadChannelDiscussionInbox': (this: any, params: any) => void;
    'updateReadChannelDiscussionOutbox': (this: any, params: any) => void;
    'messages.discussionMessage': (this: any, params: any) => void;
    'messageReplyHeader': (this: any, params: any) => void;
    'messageReplies': (this: any, params: any) => void;
    'updatePeerBlocked': (this: any, params: any) => void;
    'peerBlocked': (this: any, params: any) => void;
    'updateChannelUserTyping': (this: any, params: any) => void;
    'inputMessageCallbackQuery': (this: any, params: any) => void;
    'channelParticipantLeft': (this: any, params: any) => void;
    'channelParticipantsMentions': (this: any, params: any) => void;
    'updatePinnedMessages': (this: any, params: any) => void;
    'updatePinnedChannelMessages': (this: any, params: any) => void;
    'inputMessagesFilterPinned': (this: any, params: any) => void;
    'stats.messageStats': (this: any, params: any) => void;
    'messageActionGeoProximityReached': (this: any, params: any) => void;
    'photoPathSize': (this: any, params: any) => void;
    'speakingInGroupCallAction': (this: any, params: any) => void;
    'groupCallDiscarded': (this: any, params: any) => void;
    'groupCall': (this: any, params: any) => void;
    'inputGroupCall': (this: any, params: any) => void;
    'messageActionGroupCall': (this: any, params: any) => void;
    'messageActionInviteToGroupCall': (this: any, params: any) => void;
    'groupCallParticipant': (this: any, params: any) => void;
    'updateChat': (this: any, params: any) => void;
    'updateGroupCallParticipants': (this: any, params: any) => void;
    'updateGroupCall': (this: any, params: any) => void;
    'phone.groupCall': (this: any, params: any) => void;
    'phone.groupParticipants': (this: any, params: any) => void;
    'inlineQueryPeerTypeSameBotPM': (this: any, params: any) => void;
    'inlineQueryPeerTypePM': (this: any, params: any) => void;
    'inlineQueryPeerTypeChat': (this: any, params: any) => void;
    'inlineQueryPeerTypeMegagroup': (this: any, params: any) => void;
    'inlineQueryPeerTypeBroadcast': (this: any, params: any) => void;
    'channelAdminLogEventActionStartGroupCall': (this: any, params: any) => void;
    'channelAdminLogEventActionDiscardGroupCall': (this: any, params: any) => void;
    'channelAdminLogEventActionParticipantMute': (this: any, params: any) => void;
    'channelAdminLogEventActionParticipantUnmute': (this: any, params: any) => void;
    'channelAdminLogEventActionToggleGroupCallSetting': (this: any, params: any) => void;
    'inputPaymentCredentialsGooglePay': (this: any, params: any) => void;
    'messages.historyImport': (this: any, params: any) => void;
    'sendMessageHistoryImportAction': (this: any, params: any) => void;
    'messages.historyImportParsed': (this: any, params: any) => void;
    'inputReportReasonFake': (this: any, params: any) => void;
    'messages.affectedFoundMessages': (this: any, params: any) => void;
    'messageActionSetMessagesTTL': (this: any, params: any) => void;
    'updatePeerHistoryTTL': (this: any, params: any) => void;
    'updateChatParticipant': (this: any, params: any) => void;
    'updateChannelParticipant': (this: any, params: any) => void;
    'updateBotStopped': (this: any, params: any) => void;
    'chatInviteImporter': (this: any, params: any) => void;
    'messages.exportedChatInvites': (this: any, params: any) => void;
    'messages.exportedChatInvite': (this: any, params: any) => void;
    'messages.exportedChatInviteReplaced': (this: any, params: any) => void;
    'messages.chatInviteImporters': (this: any, params: any) => void;
    'chatAdminWithInvites': (this: any, params: any) => void;
    'messages.chatAdminsWithInvites': (this: any, params: any) => void;
    'channelAdminLogEventActionParticipantJoinByInvite': (this: any, params: any) => void;
    'channelAdminLogEventActionExportedInviteDelete': (this: any, params: any) => void;
    'channelAdminLogEventActionExportedInviteRevoke': (this: any, params: any) => void;
    'channelAdminLogEventActionExportedInviteEdit': (this: any, params: any) => void;
    'channelAdminLogEventActionParticipantVolume': (this: any, params: any) => void;
    'channelAdminLogEventActionChangeHistoryTTL': (this: any, params: any) => void;
    'messages.checkedHistoryImportPeer': (this: any, params: any) => void;
    'inputGroupCallStream': (this: any, params: any) => void;
    'phone.joinAsPeers': (this: any, params: any) => void;
    'phone.exportedGroupCallInvite': (this: any, params: any) => void;
    'inputBotInlineMessageMediaInvoice': (this: any, params: any) => void;
    'botInlineMessageMediaInvoice': (this: any, params: any) => void;
    'messageActionGroupCallScheduled': (this: any, params: any) => void;
    'groupCallParticipantVideoSourceGroup': (this: any, params: any) => void;
    'groupCallParticipantVideo': (this: any, params: any) => void;
    'updateGroupCallConnection': (this: any, params: any) => void;
    'stickers.suggestedShortName': (this: any, params: any) => void;
    'botCommandScopeDefault': (this: any, params: any) => void;
    'botCommandScopeUsers': (this: any, params: any) => void;
    'botCommandScopeChats': (this: any, params: any) => void;
    'botCommandScopeChatAdmins': (this: any, params: any) => void;
    'botCommandScopePeer': (this: any, params: any) => void;
    'botCommandScopePeerAdmins': (this: any, params: any) => void;
    'botCommandScopePeerUser': (this: any, params: any) => void;
    'account.resetPasswordFailedWait': (this: any, params: any) => void;
    'account.resetPasswordRequestedWait': (this: any, params: any) => void;
    'account.resetPasswordOk': (this: any, params: any) => void;
    'updateBotCommands': (this: any, params: any) => void;
    'messageActionSetChatTheme': (this: any, params: any) => void;
    'sendMessageChooseStickerAction': (this: any, params: any) => void;
    'sponsoredMessage': (this: any, params: any) => void;
    'messages.sponsoredMessages': (this: any, params: any) => void;
    'inputStickerSetAnimatedEmojiAnimations': (this: any, params: any) => void;
    'sendMessageEmojiInteraction': (this: any, params: any) => void;
    'sendMessageEmojiInteractionSeen': (this: any, params: any) => void;
    'inputBotInlineMessageID64': (this: any, params: any) => void;
    'searchResultsCalendarPeriod': (this: any, params: any) => void;
    'messages.searchResultsCalendar': (this: any, params: any) => void;
    'searchResultPosition': (this: any, params: any) => void;
    'messages.searchResultsPositions': (this: any, params: any) => void;
    'messageActionChatJoinedByRequest': (this: any, params: any) => void;
    'updatePendingJoinRequests': (this: any, params: any) => void;
    'updateBotChatInviteRequester': (this: any, params: any) => void;
    'channelAdminLogEventActionParticipantJoinByRequest': (this: any, params: any) => void;
    'inputKeyboardButtonUserProfile': (this: any, params: any) => void;
    'keyboardButtonUserProfile': (this: any, params: any) => void;
    'channels.sendAsPeers': (this: any, params: any) => void;
    'channelAdminLogEventActionToggleNoForwards': (this: any, params: any) => void;
    'messages.stickerSetNotModified': (this: any, params: any) => void;
    'users.userFull': (this: any, params: any) => void;
    'messages.peerSettings': (this: any, params: any) => void;
    'channelAdminLogEventActionSendMessage': (this: any, params: any) => void;
    'auth.codeTypeMissedCall': (this: any, params: any) => void;
    'auth.sentCodeTypeMissedCall': (this: any, params: any) => void;
    'auth.loggedOut': (this: any, params: any) => void;
    'updateMessageReactions': (this: any, params: any) => void;
    'reactionCount': (this: any, params: any) => void;
    'messageReactions': (this: any, params: any) => void;
    'messages.messageReactionsList': (this: any, params: any) => void;
    'availableReaction': (this: any, params: any) => void;
    'messages.availableReactionsNotModified': (this: any, params: any) => void;
    'messages.availableReactions': (this: any, params: any) => void;
    'messageEntitySpoiler': (this: any, params: any) => void;
    'channelAdminLogEventActionChangeAvailableReactions': (this: any, params: any) => void;
    'messagePeerReaction': (this: any, params: any) => void;
    'groupCallStreamChannel': (this: any, params: any) => void;
    'phone.groupCallStreamChannels': (this: any, params: any) => void;
    'inputReportReasonIllegalDrugs': (this: any, params: any) => void;
    'inputReportReasonPersonalDetails': (this: any, params: any) => void;
    'phone.groupCallStreamRtmpUrl': (this: any, params: any) => void;
    'attachMenuBotIconColor': (this: any, params: any) => void;
    'attachMenuBotIcon': (this: any, params: any) => void;
    'attachMenuBot': (this: any, params: any) => void;
    'attachMenuBotsNotModified': (this: any, params: any) => void;
    'attachMenuBots': (this: any, params: any) => void;
    'attachMenuBotsBot': (this: any, params: any) => void;
    'updateAttachMenuBots': (this: any, params: any) => void;
    'webViewResultUrl': (this: any, params: any) => void;
    'simpleWebViewResultUrl': (this: any, params: any) => void;
    'webViewMessageSent': (this: any, params: any) => void;
    'updateWebViewResultSent': (this: any, params: any) => void;
    'keyboardButtonWebView': (this: any, params: any) => void;
    'keyboardButtonSimpleWebView': (this: any, params: any) => void;
    'messageActionWebViewDataSentMe': (this: any, params: any) => void;
    'messageActionWebViewDataSent': (this: any, params: any) => void;
    'updateBotMenuButton': (this: any, params: any) => void;
    'botMenuButtonDefault': (this: any, params: any) => void;
    'botMenuButtonCommands': (this: any, params: any) => void;
    'botMenuButton': (this: any, params: any) => void;
    'account.savedRingtonesNotModified': (this: any, params: any) => void;
    'account.savedRingtones': (this: any, params: any) => void;
    'updateSavedRingtones': (this: any, params: any) => void;
    'notificationSoundDefault': (this: any, params: any) => void;
    'notificationSoundNone': (this: any, params: any) => void;
    'notificationSoundLocal': (this: any, params: any) => void;
    'notificationSoundRingtone': (this: any, params: any) => void;
    'account.savedRingtone': (this: any, params: any) => void;
    'account.savedRingtoneConverted': (this: any, params: any) => void;
    'attachMenuPeerTypeSameBotPM': (this: any, params: any) => void;
    'attachMenuPeerTypeBotPM': (this: any, params: any) => void;
    'attachMenuPeerTypePM': (this: any, params: any) => void;
    'attachMenuPeerTypeChat': (this: any, params: any) => void;
    'attachMenuPeerTypeBroadcast': (this: any, params: any) => void;
    'chatInvitePublicJoinRequests': (this: any, params: any) => void;
    'inputInvoiceMessage': (this: any, params: any) => void;
    'inputInvoiceSlug': (this: any, params: any) => void;
    'payments.exportedInvoice': (this: any, params: any) => void;
    'updateTranscribedAudio': (this: any, params: any) => void;
    'messages.transcribedAudio': (this: any, params: any) => void;
    'dialogFilterDefault': (this: any, params: any) => void;
    'help.premiumPromo': (this: any, params: any) => void;
    'messageEntityCustomEmoji': (this: any, params: any) => void;
    'documentAttributeCustomEmoji': (this: any, params: any) => void;
    'stickerSetFullCovered': (this: any, params: any) => void;
    'inputStorePaymentPremiumSubscription': (this: any, params: any) => void;
    'inputStorePaymentGiftPremium': (this: any, params: any) => void;
    'messageActionGiftPremium': (this: any, params: any) => void;
    'premiumGiftOption': (this: any, params: any) => void;
    'inputStickerSetPremiumGifts': (this: any, params: any) => void;
    'updateReadFeaturedEmojiStickers': (this: any, params: any) => void;
    'inputPrivacyKeyVoiceMessages': (this: any, params: any) => void;
    'privacyKeyVoiceMessages': (this: any, params: any) => void;
    'paymentFormMethod': (this: any, params: any) => void;
    'inputWebFileAudioAlbumThumbLocation': (this: any, params: any) => void;
    'emojiStatusEmpty': (this: any, params: any) => void;
    'emojiStatus': (this: any, params: any) => void;
    'emojiStatusUntil': (this: any, params: any) => void;
    'updateUserEmojiStatus': (this: any, params: any) => void;
    'updateRecentEmojiStatuses': (this: any, params: any) => void;
    'account.emojiStatusesNotModified': (this: any, params: any) => void;
    'account.emojiStatuses': (this: any, params: any) => void;
    'reactionEmpty': (this: any, params: any) => void;
    'reactionEmoji': (this: any, params: any) => void;
    'reactionCustomEmoji': (this: any, params: any) => void;
    'chatReactionsNone': (this: any, params: any) => void;
    'chatReactionsAll': (this: any, params: any) => void;
    'chatReactionsSome': (this: any, params: any) => void;
    'messages.reactionsNotModified': (this: any, params: any) => void;
    'messages.reactions': (this: any, params: any) => void;
    'updateRecentReactions': (this: any, params: any) => void;
    'updateMoveStickerSetToTop': (this: any, params: any) => void;
    'auth.sentCodeTypeEmailCode': (this: any, params: any) => void;
    'auth.sentCodeTypeSetUpEmailRequired': (this: any, params: any) => void;
    'emailVerifyPurposeLoginSetup': (this: any, params: any) => void;
    'emailVerifyPurposeLoginChange': (this: any, params: any) => void;
    'emailVerifyPurposePassport': (this: any, params: any) => void;
    'emailVerificationCode': (this: any, params: any) => void;
    'emailVerificationGoogle': (this: any, params: any) => void;
    'emailVerificationApple': (this: any, params: any) => void;
    'account.emailVerified': (this: any, params: any) => void;
    'account.emailVerifiedLogin': (this: any, params: any) => void;
    'premiumSubscriptionOption': (this: any, params: any) => void;
    'inputStickerSetEmojiGenericAnimations': (this: any, params: any) => void;
    'inputStickerSetEmojiDefaultStatuses': (this: any, params: any) => void;
    'sendAsPeer': (this: any, params: any) => void;
    'messageExtendedMediaPreview': (this: any, params: any) => void;
    'messageExtendedMedia': (this: any, params: any) => void;
    'updateMessageExtendedMedia': (this: any, params: any) => void;
    'stickerKeyword': (this: any, params: any) => void;
    'username': (this: any, params: any) => void;
    'channelAdminLogEventActionChangeUsernames': (this: any, params: any) => void;
    'channelAdminLogEventActionToggleForum': (this: any, params: any) => void;
    'channelAdminLogEventActionCreateTopic': (this: any, params: any) => void;
    'channelAdminLogEventActionEditTopic': (this: any, params: any) => void;
    'channelAdminLogEventActionDeleteTopic': (this: any, params: any) => void;
    'channelAdminLogEventActionPinTopic': (this: any, params: any) => void;
    'forumTopicDeleted': (this: any, params: any) => void;
    'forumTopic': (this: any, params: any) => void;
    'messages.forumTopics': (this: any, params: any) => void;
    'messageActionTopicCreate': (this: any, params: any) => void;
    'messageActionTopicEdit': (this: any, params: any) => void;
    'updateChannelPinnedTopic': (this: any, params: any) => void;
    'inputNotifyForumTopic': (this: any, params: any) => void;
    'notifyForumTopic': (this: any, params: any) => void;
    'inputStickerSetEmojiDefaultTopicIcons': (this: any, params: any) => void;
    'messages.sponsoredMessagesEmpty': (this: any, params: any) => void;
    'updateChannelPinnedTopics': (this: any, params: any) => void;
    'defaultHistoryTTL': (this: any, params: any) => void;
    'auth.codeTypeFragmentSms': (this: any, params: any) => void;
    'auth.sentCodeTypeFragmentSms': (this: any, params: any) => void;
    'exportedContactToken': (this: any, params: any) => void;
    'channelAdminLogEventActionToggleAntiSpam': (this: any, params: any) => void;
    'messageActionSuggestProfilePhoto': (this: any, params: any) => void;
    'stickerSetNoCovered': (this: any, params: any) => void;
    'updateUser': (this: any, params: any) => void;
    'auth.sentCodeSuccess': (this: any, params: any) => void;
    'messageActionRequestedPeer': (this: any, params: any) => void;
    'requestPeerTypeUser': (this: any, params: any) => void;
    'requestPeerTypeChat': (this: any, params: any) => void;
    'requestPeerTypeBroadcast': (this: any, params: any) => void;
    'keyboardButtonRequestPeer': (this: any, params: any) => void;
    'emojiListNotModified': (this: any, params: any) => void;
    'emojiList': (this: any, params: any) => void;
    'auth.sentCodeTypeFirebaseSms': (this: any, params: any) => void;
    'emojiGroup': (this: any, params: any) => void;
    'messages.emojiGroupsNotModified': (this: any, params: any) => void;
    'messages.emojiGroups': (this: any, params: any) => void;
    'videoSizeEmojiMarkup': (this: any, params: any) => void;
    'videoSizeStickerMarkup': (this: any, params: any) => void;
    'textWithEntities': (this: any, params: any) => void;
    'messages.translateResult': (this: any, params: any) => void;
    'autoSaveSettings': (this: any, params: any) => void;
    'autoSaveException': (this: any, params: any) => void;
    'account.autoSaveSettings': (this: any, params: any) => void;
    'updateAutoSaveSettings': (this: any, params: any) => void;
    'help.appConfigNotModified': (this: any, params: any) => void;
    'help.appConfig': (this: any, params: any) => void;
    'inputBotAppID': (this: any, params: any) => void;
    'inputBotAppShortName': (this: any, params: any) => void;
    'botAppNotModified': (this: any, params: any) => void;
    'botApp': (this: any, params: any) => void;
    'messages.botApp': (this: any, params: any) => void;
    'appWebViewResultUrl': (this: any, params: any) => void;
    'inlineBotWebView': (this: any, params: any) => void;
    'readParticipantDate': (this: any, params: any) => void;
    'updateGroupInvitePrivacyForbidden': (this: any, params: any) => void;
    'dialogFilterChatlist': (this: any, params: any) => void;
    'inputChatlistDialogFilter': (this: any, params: any) => void;
    'exportedChatlistInvite': (this: any, params: any) => void;
    'chatlists.exportedChatlistInvite': (this: any, params: any) => void;
    'chatlists.exportedInvites': (this: any, params: any) => void;
    'chatlists.chatlistInviteAlready': (this: any, params: any) => void;
    'chatlists.chatlistInvite': (this: any, params: any) => void;
    'chatlists.chatlistUpdates': (this: any, params: any) => void;
    'messageActionSetChatWallPaper': (this: any, params: any) => void;
    'messageActionSetSameChatWallPaper': (this: any, params: any) => void;
    'bots.botInfo': (this: any, params: any) => void;
    'inlineQueryPeerTypeBotPM': (this: any, params: any) => void;
    'invokeAfterMsg': (this: any, params: any) => void;
    'invokeAfterMsgs': (this: any, params: any) => void;
    'auth.sendCode': (this: any, params: any) => void;
    'auth.signUp': (this: any, params: any) => void;
    'auth.signIn': (this: any, params: any) => void;
    'auth.logOut': (this: any, params: any) => void;
    'auth.resetAuthorizations': (this: any, params: any) => void;
    'auth.exportAuthorization': (this: any, params: any) => void;
    'auth.importAuthorization': (this: any, params: any) => void;
    'auth.bindTempAuthKey': (this: any, params: any) => void;
    'account.registerDevice': (this: any, params: any) => void;
    'account.unregisterDevice': (this: any, params: any) => void;
    'account.updateNotifySettings': (this: any, params: any) => void;
    'account.getNotifySettings': (this: any, params: any) => void;
    'account.resetNotifySettings': (this: any, params: any) => void;
    'account.updateProfile': (this: any, params: any) => void;
    'account.updateStatus': (this: any, params: any) => void;
    'account.getWallPapers': (this: any, params: any) => void;
    'account.reportPeer': (this: any, params: any) => void;
    'users.getUsers': (this: any, params: any) => void;
    'users.getFullUser': (this: any, params: any) => void;
    'contacts.getContactIDs': (this: any, params: any) => void;
    'contacts.getStatuses': (this: any, params: any) => void;
    'contacts.getContacts': (this: any, params: any) => void;
    'contacts.importContacts': (this: any, params: any) => void;
    'contacts.deleteContacts': (this: any, params: any) => void;
    'contacts.deleteByPhones': (this: any, params: any) => void;
    'contacts.block': (this: any, params: any) => void;
    'contacts.unblock': (this: any, params: any) => void;
    'contacts.getBlocked': (this: any, params: any) => void;
    'messages.getMessages': (this: any, params: any) => void;
    'messages.getDialogs': (this: any, params: any) => void;
    'messages.getHistory': (this: any, params: any) => void;
    'messages.search': (this: any, params: any) => void;
    'messages.readHistory': (this: any, params: any) => void;
    'messages.deleteHistory': (this: any, params: any) => void;
    'messages.deleteMessages': (this: any, params: any) => void;
    'messages.receivedMessages': (this: any, params: any) => void;
    'messages.setTyping': (this: any, params: any) => void;
    'messages.sendMessage': (this: any, params: any) => void;
    'messages.sendMedia': (this: any, params: any) => void;
    'messages.forwardMessages': (this: any, params: any) => void;
    'messages.reportSpam': (this: any, params: any) => void;
    'messages.getPeerSettings': (this: any, params: any) => void;
    'messages.report': (this: any, params: any) => void;
    'messages.getChats': (this: any, params: any) => void;
    'messages.getFullChat': (this: any, params: any) => void;
    'messages.editChatTitle': (this: any, params: any) => void;
    'messages.editChatPhoto': (this: any, params: any) => void;
    'messages.addChatUser': (this: any, params: any) => void;
    'messages.deleteChatUser': (this: any, params: any) => void;
    'messages.createChat': (this: any, params: any) => void;
    'updates.getState': (this: any, params: any) => void;
    'updates.getDifference': (this: any, params: any) => void;
    'photos.updateProfilePhoto': (this: any, params: any) => void;
    'photos.uploadProfilePhoto': (this: any, params: any) => void;
    'photos.deletePhotos': (this: any, params: any) => void;
    'upload.saveFilePart': (this: any, params: any) => void;
    'upload.getFile': (this: any, params: any) => void;
    'help.getConfig': (this: any, params: any) => void;
    'help.getNearestDc': (this: any, params: any) => void;
    'help.getAppUpdate': (this: any, params: any) => void;
    'help.getInviteText': (this: any, params: any) => void;
    'photos.getUserPhotos': (this: any, params: any) => void;
    'messages.getDhConfig': (this: any, params: any) => void;
    'messages.requestEncryption': (this: any, params: any) => void;
    'messages.acceptEncryption': (this: any, params: any) => void;
    'messages.discardEncryption': (this: any, params: any) => void;
    'messages.setEncryptedTyping': (this: any, params: any) => void;
    'messages.readEncryptedHistory': (this: any, params: any) => void;
    'messages.sendEncrypted': (this: any, params: any) => void;
    'messages.sendEncryptedFile': (this: any, params: any) => void;
    'messages.sendEncryptedService': (this: any, params: any) => void;
    'messages.receivedQueue': (this: any, params: any) => void;
    'messages.reportEncryptedSpam': (this: any, params: any) => void;
    'upload.saveBigFilePart': (this: any, params: any) => void;
    'initConnection': (this: any, params: any) => void;
    'help.getSupport': (this: any, params: any) => void;
    'messages.readMessageContents': (this: any, params: any) => void;
    'account.checkUsername': (this: any, params: any) => void;
    'account.updateUsername': (this: any, params: any) => void;
    'contacts.search': (this: any, params: any) => void;
    'account.getPrivacy': (this: any, params: any) => void;
    'account.setPrivacy': (this: any, params: any) => void;
    'account.deleteAccount': (this: any, params: any) => void;
    'account.getAccountTTL': (this: any, params: any) => void;
    'account.setAccountTTL': (this: any, params: any) => void;
    'invokeWithLayer': (this: any, params: any) => void;
    'contacts.resolveUsername': (this: any, params: any) => void;
    'account.sendChangePhoneCode': (this: any, params: any) => void;
    'account.changePhone': (this: any, params: any) => void;
    'messages.getStickers': (this: any, params: any) => void;
    'messages.getAllStickers': (this: any, params: any) => void;
    'account.updateDeviceLocked': (this: any, params: any) => void;
    'auth.importBotAuthorization': (this: any, params: any) => void;
    'messages.getWebPagePreview': (this: any, params: any) => void;
    'account.getAuthorizations': (this: any, params: any) => void;
    'account.resetAuthorization': (this: any, params: any) => void;
    'account.getPassword': (this: any, params: any) => void;
    'account.getPasswordSettings': (this: any, params: any) => void;
    'account.updatePasswordSettings': (this: any, params: any) => void;
    'auth.checkPassword': (this: any, params: any) => void;
    'auth.requestPasswordRecovery': (this: any, params: any) => void;
    'auth.recoverPassword': (this: any, params: any) => void;
    'invokeWithoutUpdates': (this: any, params: any) => void;
    'messages.exportChatInvite': (this: any, params: any) => void;
    'messages.checkChatInvite': (this: any, params: any) => void;
    'messages.importChatInvite': (this: any, params: any) => void;
    'messages.getStickerSet': (this: any, params: any) => void;
    'messages.installStickerSet': (this: any, params: any) => void;
    'messages.uninstallStickerSet': (this: any, params: any) => void;
    'messages.startBot': (this: any, params: any) => void;
    'help.getAppChangelog': (this: any, params: any) => void;
    'messages.getMessagesViews': (this: any, params: any) => void;
    'channels.readHistory': (this: any, params: any) => void;
    'channels.deleteMessages': (this: any, params: any) => void;
    'channels.reportSpam': (this: any, params: any) => void;
    'channels.getMessages': (this: any, params: any) => void;
    'channels.getParticipants': (this: any, params: any) => void;
    'channels.getParticipant': (this: any, params: any) => void;
    'channels.getChannels': (this: any, params: any) => void;
    'channels.getFullChannel': (this: any, params: any) => void;
    'channels.createChannel': (this: any, params: any) => void;
    'channels.editAdmin': (this: any, params: any) => void;
    'channels.editTitle': (this: any, params: any) => void;
    'channels.editPhoto': (this: any, params: any) => void;
    'channels.checkUsername': (this: any, params: any) => void;
    'channels.updateUsername': (this: any, params: any) => void;
    'channels.joinChannel': (this: any, params: any) => void;
    'channels.leaveChannel': (this: any, params: any) => void;
    'channels.inviteToChannel': (this: any, params: any) => void;
    'channels.deleteChannel': (this: any, params: any) => void;
    'updates.getChannelDifference': (this: any, params: any) => void;
    'messages.editChatAdmin': (this: any, params: any) => void;
    'messages.migrateChat': (this: any, params: any) => void;
    'messages.searchGlobal': (this: any, params: any) => void;
    'messages.reorderStickerSets': (this: any, params: any) => void;
    'messages.getDocumentByHash': (this: any, params: any) => void;
    'messages.getSavedGifs': (this: any, params: any) => void;
    'messages.saveGif': (this: any, params: any) => void;
    'messages.getInlineBotResults': (this: any, params: any) => void;
    'messages.setInlineBotResults': (this: any, params: any) => void;
    'messages.sendInlineBotResult': (this: any, params: any) => void;
    'channels.exportMessageLink': (this: any, params: any) => void;
    'channels.toggleSignatures': (this: any, params: any) => void;
    'auth.resendCode': (this: any, params: any) => void;
    'auth.cancelCode': (this: any, params: any) => void;
    'messages.getMessageEditData': (this: any, params: any) => void;
    'messages.editMessage': (this: any, params: any) => void;
    'messages.editInlineBotMessage': (this: any, params: any) => void;
    'messages.getBotCallbackAnswer': (this: any, params: any) => void;
    'messages.setBotCallbackAnswer': (this: any, params: any) => void;
    'contacts.getTopPeers': (this: any, params: any) => void;
    'contacts.resetTopPeerRating': (this: any, params: any) => void;
    'messages.getPeerDialogs': (this: any, params: any) => void;
    'messages.saveDraft': (this: any, params: any) => void;
    'messages.getAllDrafts': (this: any, params: any) => void;
    'messages.getFeaturedStickers': (this: any, params: any) => void;
    'messages.readFeaturedStickers': (this: any, params: any) => void;
    'messages.getRecentStickers': (this: any, params: any) => void;
    'messages.saveRecentSticker': (this: any, params: any) => void;
    'messages.clearRecentStickers': (this: any, params: any) => void;
    'messages.getArchivedStickers': (this: any, params: any) => void;
    'account.sendConfirmPhoneCode': (this: any, params: any) => void;
    'account.confirmPhone': (this: any, params: any) => void;
    'channels.getAdminedPublicChannels': (this: any, params: any) => void;
    'messages.getMaskStickers': (this: any, params: any) => void;
    'messages.getAttachedStickers': (this: any, params: any) => void;
    'auth.dropTempAuthKeys': (this: any, params: any) => void;
    'messages.setGameScore': (this: any, params: any) => void;
    'messages.setInlineGameScore': (this: any, params: any) => void;
    'messages.getGameHighScores': (this: any, params: any) => void;
    'messages.getInlineGameHighScores': (this: any, params: any) => void;
    'messages.getCommonChats': (this: any, params: any) => void;
    'help.setBotUpdatesStatus': (this: any, params: any) => void;
    'messages.getWebPage': (this: any, params: any) => void;
    'messages.toggleDialogPin': (this: any, params: any) => void;
    'messages.reorderPinnedDialogs': (this: any, params: any) => void;
    'messages.getPinnedDialogs': (this: any, params: any) => void;
    'bots.sendCustomRequest': (this: any, params: any) => void;
    'bots.answerWebhookJSONQuery': (this: any, params: any) => void;
    'upload.getWebFile': (this: any, params: any) => void;
    'payments.getPaymentForm': (this: any, params: any) => void;
    'payments.getPaymentReceipt': (this: any, params: any) => void;
    'payments.validateRequestedInfo': (this: any, params: any) => void;
    'payments.sendPaymentForm': (this: any, params: any) => void;
    'account.getTmpPassword': (this: any, params: any) => void;
    'payments.getSavedInfo': (this: any, params: any) => void;
    'payments.clearSavedInfo': (this: any, params: any) => void;
    'messages.setBotShippingResults': (this: any, params: any) => void;
    'messages.setBotPrecheckoutResults': (this: any, params: any) => void;
    'stickers.createStickerSet': (this: any, params: any) => void;
    'stickers.removeStickerFromSet': (this: any, params: any) => void;
    'stickers.changeStickerPosition': (this: any, params: any) => void;
    'stickers.addStickerToSet': (this: any, params: any) => void;
    'messages.uploadMedia': (this: any, params: any) => void;
    'phone.getCallConfig': (this: any, params: any) => void;
    'phone.requestCall': (this: any, params: any) => void;
    'phone.acceptCall': (this: any, params: any) => void;
    'phone.confirmCall': (this: any, params: any) => void;
    'phone.receivedCall': (this: any, params: any) => void;
    'phone.discardCall': (this: any, params: any) => void;
    'phone.setCallRating': (this: any, params: any) => void;
    'phone.saveCallDebug': (this: any, params: any) => void;
    'upload.getCdnFile': (this: any, params: any) => void;
    'upload.reuploadCdnFile': (this: any, params: any) => void;
    'help.getCdnConfig': (this: any, params: any) => void;
    'langpack.getLangPack': (this: any, params: any) => void;
    'langpack.getStrings': (this: any, params: any) => void;
    'langpack.getDifference': (this: any, params: any) => void;
    'langpack.getLanguages': (this: any, params: any) => void;
    'channels.editBanned': (this: any, params: any) => void;
    'channels.getAdminLog': (this: any, params: any) => void;
    'upload.getCdnFileHashes': (this: any, params: any) => void;
    'messages.sendScreenshotNotification': (this: any, params: any) => void;
    'channels.setStickers': (this: any, params: any) => void;
    'messages.getFavedStickers': (this: any, params: any) => void;
    'messages.faveSticker': (this: any, params: any) => void;
    'channels.readMessageContents': (this: any, params: any) => void;
    'contacts.resetSaved': (this: any, params: any) => void;
    'messages.getUnreadMentions': (this: any, params: any) => void;
    'channels.deleteHistory': (this: any, params: any) => void;
    'help.getRecentMeUrls': (this: any, params: any) => void;
    'channels.togglePreHistoryHidden': (this: any, params: any) => void;
    'messages.readMentions': (this: any, params: any) => void;
    'messages.getRecentLocations': (this: any, params: any) => void;
    'messages.sendMultiMedia': (this: any, params: any) => void;
    'messages.uploadEncryptedFile': (this: any, params: any) => void;
    'account.getWebAuthorizations': (this: any, params: any) => void;
    'account.resetWebAuthorization': (this: any, params: any) => void;
    'account.resetWebAuthorizations': (this: any, params: any) => void;
    'messages.searchStickerSets': (this: any, params: any) => void;
    'upload.getFileHashes': (this: any, params: any) => void;
    'help.getTermsOfServiceUpdate': (this: any, params: any) => void;
    'help.acceptTermsOfService': (this: any, params: any) => void;
    'account.getAllSecureValues': (this: any, params: any) => void;
    'account.getSecureValue': (this: any, params: any) => void;
    'account.saveSecureValue': (this: any, params: any) => void;
    'account.deleteSecureValue': (this: any, params: any) => void;
    'users.setSecureValueErrors': (this: any, params: any) => void;
    'account.getAuthorizationForm': (this: any, params: any) => void;
    'account.acceptAuthorization': (this: any, params: any) => void;
    'account.sendVerifyPhoneCode': (this: any, params: any) => void;
    'account.verifyPhone': (this: any, params: any) => void;
    'account.sendVerifyEmailCode': (this: any, params: any) => void;
    'account.verifyEmail': (this: any, params: any) => void;
    'help.getDeepLinkInfo': (this: any, params: any) => void;
    'contacts.getSaved': (this: any, params: any) => void;
    'channels.getLeftChannels': (this: any, params: any) => void;
    'account.initTakeoutSession': (this: any, params: any) => void;
    'account.finishTakeoutSession': (this: any, params: any) => void;
    'messages.getSplitRanges': (this: any, params: any) => void;
    'invokeWithMessagesRange': (this: any, params: any) => void;
    'invokeWithTakeout': (this: any, params: any) => void;
    'messages.markDialogUnread': (this: any, params: any) => void;
    'messages.getDialogUnreadMarks': (this: any, params: any) => void;
    'contacts.toggleTopPeers': (this: any, params: any) => void;
    'messages.clearAllDrafts': (this: any, params: any) => void;
    'help.getAppConfig': (this: any, params: any) => void;
    'help.saveAppLog': (this: any, params: any) => void;
    'help.getPassportConfig': (this: any, params: any) => void;
    'langpack.getLanguage': (this: any, params: any) => void;
    'messages.updatePinnedMessage': (this: any, params: any) => void;
    'account.confirmPasswordEmail': (this: any, params: any) => void;
    'account.resendPasswordEmail': (this: any, params: any) => void;
    'account.cancelPasswordEmail': (this: any, params: any) => void;
    'help.getSupportName': (this: any, params: any) => void;
    'help.getUserInfo': (this: any, params: any) => void;
    'help.editUserInfo': (this: any, params: any) => void;
    'account.getContactSignUpNotification': (this: any, params: any) => void;
    'account.setContactSignUpNotification': (this: any, params: any) => void;
    'account.getNotifyExceptions': (this: any, params: any) => void;
    'messages.sendVote': (this: any, params: any) => void;
    'messages.getPollResults': (this: any, params: any) => void;
    'messages.getOnlines': (this: any, params: any) => void;
    'messages.editChatAbout': (this: any, params: any) => void;
    'messages.editChatDefaultBannedRights': (this: any, params: any) => void;
    'account.getWallPaper': (this: any, params: any) => void;
    'account.uploadWallPaper': (this: any, params: any) => void;
    'account.saveWallPaper': (this: any, params: any) => void;
    'account.installWallPaper': (this: any, params: any) => void;
    'account.resetWallPapers': (this: any, params: any) => void;
    'account.getAutoDownloadSettings': (this: any, params: any) => void;
    'account.saveAutoDownloadSettings': (this: any, params: any) => void;
    'messages.getEmojiKeywords': (this: any, params: any) => void;
    'messages.getEmojiKeywordsDifference': (this: any, params: any) => void;
    'messages.getEmojiKeywordsLanguages': (this: any, params: any) => void;
    'messages.getEmojiURL': (this: any, params: any) => void;
    'folders.editPeerFolders': (this: any, params: any) => void;
    'messages.getSearchCounters': (this: any, params: any) => void;
    'channels.getGroupsForDiscussion': (this: any, params: any) => void;
    'channels.setDiscussionGroup': (this: any, params: any) => void;
    'messages.requestUrlAuth': (this: any, params: any) => void;
    'messages.acceptUrlAuth': (this: any, params: any) => void;
    'messages.hidePeerSettingsBar': (this: any, params: any) => void;
    'contacts.addContact': (this: any, params: any) => void;
    'contacts.acceptContact': (this: any, params: any) => void;
    'channels.editCreator': (this: any, params: any) => void;
    'contacts.getLocated': (this: any, params: any) => void;
    'channels.editLocation': (this: any, params: any) => void;
    'channels.toggleSlowMode': (this: any, params: any) => void;
    'messages.getScheduledHistory': (this: any, params: any) => void;
    'messages.getScheduledMessages': (this: any, params: any) => void;
    'messages.sendScheduledMessages': (this: any, params: any) => void;
    'messages.deleteScheduledMessages': (this: any, params: any) => void;
    'account.uploadTheme': (this: any, params: any) => void;
    'account.createTheme': (this: any, params: any) => void;
    'account.updateTheme': (this: any, params: any) => void;
    'account.saveTheme': (this: any, params: any) => void;
    'account.installTheme': (this: any, params: any) => void;
    'account.getTheme': (this: any, params: any) => void;
    'account.getThemes': (this: any, params: any) => void;
    'auth.exportLoginToken': (this: any, params: any) => void;
    'auth.importLoginToken': (this: any, params: any) => void;
    'auth.acceptLoginToken': (this: any, params: any) => void;
    'account.setContentSettings': (this: any, params: any) => void;
    'account.getContentSettings': (this: any, params: any) => void;
    'channels.getInactiveChannels': (this: any, params: any) => void;
    'account.getMultiWallPapers': (this: any, params: any) => void;
    'messages.getPollVotes': (this: any, params: any) => void;
    'messages.toggleStickerSets': (this: any, params: any) => void;
    'payments.getBankCardData': (this: any, params: any) => void;
    'messages.getDialogFilters': (this: any, params: any) => void;
    'messages.getSuggestedDialogFilters': (this: any, params: any) => void;
    'messages.updateDialogFilter': (this: any, params: any) => void;
    'messages.updateDialogFiltersOrder': (this: any, params: any) => void;
    'stats.getBroadcastStats': (this: any, params: any) => void;
    'stats.loadAsyncGraph': (this: any, params: any) => void;
    'stickers.setStickerSetThumb': (this: any, params: any) => void;
    'bots.setBotCommands': (this: any, params: any) => void;
    'messages.getOldFeaturedStickers': (this: any, params: any) => void;
    'help.getPromoData': (this: any, params: any) => void;
    'help.hidePromoData': (this: any, params: any) => void;
    'phone.sendSignalingData': (this: any, params: any) => void;
    'stats.getMegagroupStats': (this: any, params: any) => void;
    'account.getGlobalPrivacySettings': (this: any, params: any) => void;
    'account.setGlobalPrivacySettings': (this: any, params: any) => void;
    'help.dismissSuggestion': (this: any, params: any) => void;
    'help.getCountriesList': (this: any, params: any) => void;
    'messages.getReplies': (this: any, params: any) => void;
    'messages.getDiscussionMessage': (this: any, params: any) => void;
    'messages.readDiscussion': (this: any, params: any) => void;
    'contacts.blockFromReplies': (this: any, params: any) => void;
    'stats.getMessagePublicForwards': (this: any, params: any) => void;
    'stats.getMessageStats': (this: any, params: any) => void;
    'messages.unpinAllMessages': (this: any, params: any) => void;
    'phone.createGroupCall': (this: any, params: any) => void;
    'phone.joinGroupCall': (this: any, params: any) => void;
    'phone.leaveGroupCall': (this: any, params: any) => void;
    'phone.inviteToGroupCall': (this: any, params: any) => void;
    'phone.discardGroupCall': (this: any, params: any) => void;
    'phone.toggleGroupCallSettings': (this: any, params: any) => void;
    'phone.getGroupCall': (this: any, params: any) => void;
    'phone.getGroupParticipants': (this: any, params: any) => void;
    'phone.checkGroupCall': (this: any, params: any) => void;
    'messages.deleteChat': (this: any, params: any) => void;
    'messages.deletePhoneCallHistory': (this: any, params: any) => void;
    'messages.checkHistoryImport': (this: any, params: any) => void;
    'messages.initHistoryImport': (this: any, params: any) => void;
    'messages.uploadImportedMedia': (this: any, params: any) => void;
    'messages.startHistoryImport': (this: any, params: any) => void;
    'messages.getExportedChatInvites': (this: any, params: any) => void;
    'messages.getExportedChatInvite': (this: any, params: any) => void;
    'messages.editExportedChatInvite': (this: any, params: any) => void;
    'messages.deleteRevokedExportedChatInvites': (this: any, params: any) => void;
    'messages.deleteExportedChatInvite': (this: any, params: any) => void;
    'messages.getAdminsWithInvites': (this: any, params: any) => void;
    'messages.getChatInviteImporters': (this: any, params: any) => void;
    'messages.setHistoryTTL': (this: any, params: any) => void;
    'account.reportProfilePhoto': (this: any, params: any) => void;
    'channels.convertToGigagroup': (this: any, params: any) => void;
    'messages.checkHistoryImportPeer': (this: any, params: any) => void;
    'phone.toggleGroupCallRecord': (this: any, params: any) => void;
    'phone.editGroupCallParticipant': (this: any, params: any) => void;
    'phone.editGroupCallTitle': (this: any, params: any) => void;
    'phone.getGroupCallJoinAs': (this: any, params: any) => void;
    'phone.exportGroupCallInvite': (this: any, params: any) => void;
    'phone.toggleGroupCallStartSubscription': (this: any, params: any) => void;
    'phone.startScheduledGroupCall': (this: any, params: any) => void;
    'phone.saveDefaultGroupCallJoinAs': (this: any, params: any) => void;
    'phone.joinGroupCallPresentation': (this: any, params: any) => void;
    'phone.leaveGroupCallPresentation': (this: any, params: any) => void;
    'stickers.checkShortName': (this: any, params: any) => void;
    'stickers.suggestShortName': (this: any, params: any) => void;
    'bots.resetBotCommands': (this: any, params: any) => void;
    'bots.getBotCommands': (this: any, params: any) => void;
    'account.resetPassword': (this: any, params: any) => void;
    'account.declinePasswordReset': (this: any, params: any) => void;
    'auth.checkRecoveryPassword': (this: any, params: any) => void;
    'account.getChatThemes': (this: any, params: any) => void;
    'messages.setChatTheme': (this: any, params: any) => void;
    'channels.viewSponsoredMessage': (this: any, params: any) => void;
    'channels.getSponsoredMessages': (this: any, params: any) => void;
    'messages.getMessageReadParticipants': (this: any, params: any) => void;
    'messages.getSearchResultsCalendar': (this: any, params: any) => void;
    'messages.getSearchResultsPositions': (this: any, params: any) => void;
    'messages.hideChatJoinRequest': (this: any, params: any) => void;
    'messages.hideAllChatJoinRequests': (this: any, params: any) => void;
    'messages.toggleNoForwards': (this: any, params: any) => void;
    'messages.saveDefaultSendAs': (this: any, params: any) => void;
    'channels.getSendAs': (this: any, params: any) => void;
    'account.setAuthorizationTTL': (this: any, params: any) => void;
    'account.changeAuthorizationSettings': (this: any, params: any) => void;
    'channels.deleteParticipantHistory': (this: any, params: any) => void;
    'messages.sendReaction': (this: any, params: any) => void;
    'messages.getMessagesReactions': (this: any, params: any) => void;
    'messages.getMessageReactionsList': (this: any, params: any) => void;
    'messages.setChatAvailableReactions': (this: any, params: any) => void;
    'messages.getAvailableReactions': (this: any, params: any) => void;
    'messages.setDefaultReaction': (this: any, params: any) => void;
    'messages.translateText': (this: any, params: any) => void;
    'messages.getUnreadReactions': (this: any, params: any) => void;
    'messages.readReactions': (this: any, params: any) => void;
    'contacts.resolvePhone': (this: any, params: any) => void;
    'phone.getGroupCallStreamChannels': (this: any, params: any) => void;
    'phone.getGroupCallStreamRtmpUrl': (this: any, params: any) => void;
    'messages.searchSentMedia': (this: any, params: any) => void;
    'messages.getAttachMenuBots': (this: any, params: any) => void;
    'messages.getAttachMenuBot': (this: any, params: any) => void;
    'messages.toggleBotInAttachMenu': (this: any, params: any) => void;
    'messages.requestWebView': (this: any, params: any) => void;
    'messages.prolongWebView': (this: any, params: any) => void;
    'messages.requestSimpleWebView': (this: any, params: any) => void;
    'messages.sendWebViewResultMessage': (this: any, params: any) => void;
    'messages.sendWebViewData': (this: any, params: any) => void;
    'bots.setBotMenuButton': (this: any, params: any) => void;
    'bots.getBotMenuButton': (this: any, params: any) => void;
    'account.getSavedRingtones': (this: any, params: any) => void;
    'account.saveRingtone': (this: any, params: any) => void;
    'account.uploadRingtone': (this: any, params: any) => void;
    'bots.setBotBroadcastDefaultAdminRights': (this: any, params: any) => void;
    'bots.setBotGroupDefaultAdminRights': (this: any, params: any) => void;
    'phone.saveCallLog': (this: any, params: any) => void;
    'channels.toggleJoinToSend': (this: any, params: any) => void;
    'channels.toggleJoinRequest': (this: any, params: any) => void;
    'payments.exportInvoice': (this: any, params: any) => void;
    'messages.transcribeAudio': (this: any, params: any) => void;
    'messages.rateTranscribedAudio': (this: any, params: any) => void;
    'payments.assignAppStoreTransaction': (this: any, params: any) => void;
    'payments.assignPlayMarketTransaction': (this: any, params: any) => void;
    'payments.canPurchasePremium': (this: any, params: any) => void;
    'help.getPremiumPromo': (this: any, params: any) => void;
    'messages.getCustomEmojiDocuments': (this: any, params: any) => void;
    'messages.getEmojiStickers': (this: any, params: any) => void;
    'messages.getFeaturedEmojiStickers': (this: any, params: any) => void;
    'account.updateEmojiStatus': (this: any, params: any) => void;
    'account.getDefaultEmojiStatuses': (this: any, params: any) => void;
    'account.getRecentEmojiStatuses': (this: any, params: any) => void;
    'account.clearRecentEmojiStatuses': (this: any, params: any) => void;
    'messages.reportReaction': (this: any, params: any) => void;
    'messages.getTopReactions': (this: any, params: any) => void;
    'messages.getRecentReactions': (this: any, params: any) => void;
    'messages.clearRecentReactions': (this: any, params: any) => void;
    'messages.getExtendedMedia': (this: any, params: any) => void;
    'auth.importWebTokenAuthorization': (this: any, params: any) => void;
    'account.reorderUsernames': (this: any, params: any) => void;
    'account.toggleUsername': (this: any, params: any) => void;
    'channels.reorderUsernames': (this: any, params: any) => void;
    'channels.toggleUsername': (this: any, params: any) => void;
    'channels.deactivateAllUsernames': (this: any, params: any) => void;
    'channels.toggleForum': (this: any, params: any) => void;
    'channels.createForumTopic': (this: any, params: any) => void;
    'channels.getForumTopics': (this: any, params: any) => void;
    'channels.getForumTopicsByID': (this: any, params: any) => void;
    'channels.editForumTopic': (this: any, params: any) => void;
    'channels.updatePinnedForumTopic': (this: any, params: any) => void;
    'channels.deleteTopicHistory': (this: any, params: any) => void;
    'channels.reorderPinnedForumTopics': (this: any, params: any) => void;
    'channels.toggleAntiSpam': (this: any, params: any) => void;
    'channels.reportAntiSpamFalsePositive': (this: any, params: any) => void;
    'messages.setDefaultHistoryTTL': (this: any, params: any) => void;
    'messages.getDefaultHistoryTTL': (this: any, params: any) => void;
    'contacts.exportContactToken': (this: any, params: any) => void;
    'contacts.importContactToken': (this: any, params: any) => void;
    'photos.uploadContactProfilePhoto': (this: any, params: any) => void;
    'channels.toggleParticipantsHidden': (this: any, params: any) => void;
    'messages.sendBotRequestedPeer': (this: any, params: any) => void;
    'account.getDefaultProfilePhotoEmojis': (this: any, params: any) => void;
    'account.getDefaultGroupPhotoEmojis': (this: any, params: any) => void;
    'auth.requestFirebaseSms': (this: any, params: any) => void;
    'messages.getEmojiGroups': (this: any, params: any) => void;
    'messages.getEmojiStatusGroups': (this: any, params: any) => void;
    'messages.getEmojiProfilePhotoGroups': (this: any, params: any) => void;
    'messages.searchCustomEmoji': (this: any, params: any) => void;
    'messages.togglePeerTranslations': (this: any, params: any) => void;
    'account.getAutoSaveSettings': (this: any, params: any) => void;
    'account.saveAutoSaveSettings': (this: any, params: any) => void;
    'account.deleteAutoSaveExceptions': (this: any, params: any) => void;
    'stickers.changeSticker': (this: any, params: any) => void;
    'stickers.renameStickerSet': (this: any, params: any) => void;
    'stickers.deleteStickerSet': (this: any, params: any) => void;
    'messages.getBotApp': (this: any, params: any) => void;
    'messages.requestAppWebView': (this: any, params: any) => void;
    'bots.setBotInfo': (this: any, params: any) => void;
    'bots.getBotInfo': (this: any, params: any) => void;
    'auth.resetLoginEmail': (this: any, params: any) => void;
    'chatlists.exportChatlistInvite': (this: any, params: any) => void;
    'chatlists.deleteExportedInvite': (this: any, params: any) => void;
    'chatlists.editExportedInvite': (this: any, params: any) => void;
    'chatlists.getExportedInvites': (this: any, params: any) => void;
    'chatlists.checkChatlistInvite': (this: any, params: any) => void;
    'chatlists.joinChatlistInvite': (this: any, params: any) => void;
    'chatlists.getChatlistUpdates': (this: any, params: any) => void;
    'chatlists.joinChatlistUpdates': (this: any, params: any) => void;
    'chatlists.hideChatlistUpdates': (this: any, params: any) => void;
    'chatlists.getLeaveChatlistSuggestions': (this: any, params: any) => void;
    'chatlists.leaveChatlist': (this: any, params: any) => void;
    'bots.reorderUsernames': (this: any, params: any) => void;
    'bots.toggleUsername': (this: any, params: any) => void;
    'messages.setChatWallPaper': (this: any, params: any) => void;
}
export declare const builderMap: BuilderMap;
